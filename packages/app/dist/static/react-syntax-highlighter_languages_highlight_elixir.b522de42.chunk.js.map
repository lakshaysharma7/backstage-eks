{"version":3,"sources":["webpack://app/../node_modules/highlight.js/lib/languages/elixir.js"],"names":[],"mappings":"oFASA,WAAgB,EAAM,CACpB,KAAM,GAAkB,kCAClB,EAAmB,mFACnB,EAAkB,CACtB,SAAU,EACV,QAAS,qMAGX,EACM,EAAQ,CACZ,UAAW,QACX,MAAO,MACP,IAAK,KACL,SAAU,CACZ,EACM,EAAS,CACb,UAAW,SACX,MAAO,uGACP,UAAW,CACb,EACM,EAAmB,aACnB,EAAkB,CACtB,UAAW,SACX,MAAO,YAAmB,EAAmB,IAC7C,SAAU,CACR,CACE,WAAY,GACZ,SAAU,CACR,CACE,SAAU,CACR,EAAK,iBACL,CACF,EACA,SAAU,CACR,CACE,MAAO,IACP,IAAK,GACP,EACA,CACE,MAAO,IACP,IAAK,GACP,EACA,CACE,MAAO,KACP,IAAK,IACP,EACA,CACE,MAAO,KACP,IAAK,IACP,EACA,CACE,MAAO,KACP,IAAK,IACP,EACA,CACE,MAAO,KACP,IAAK,IACP,EACA,CACE,MAAO,KACP,IAAK,IACP,EACA,CACE,MAAO,IACP,IAAK,GACP,CACF,CACF,CACF,CACF,CACF,CACF,EAEM,EAAe,CACnB,UAAW,SACX,MAAO,YAAmB,EAAmB,IAC7C,SAAU,CACR,CACE,MAAO,IACP,IAAK,GACP,EACA,CACE,MAAO,IACP,IAAK,GACP,EACA,CACE,MAAO,KACP,IAAK,IACP,EACA,CACE,MAAO,KACP,IAAK,IACP,EACA,CACE,MAAO,KACP,IAAK,IACP,EACA,CACE,MAAO,KACP,IAAK,IACP,EACA,CACE,MAAO,KACP,IAAK,IACP,EACA,CACE,MAAO,IACP,IAAK,GACP,CACF,CACF,EAEM,EAAS,CACb,UAAW,SACX,SAAU,CACR,EAAK,iBACL,CACF,EACA,SAAU,CACR,CACE,MAAO,MACP,IAAK,KACP,EACA,CACE,MAAO,MACP,IAAK,KACP,EACA,CACE,MAAO,QACP,IAAK,MACL,SAAU,CAAC,CACb,EACA,CACE,MAAO,MACP,IAAK,IACL,SAAU,CAAC,CACb,EACA,CACE,MAAO,QACP,IAAK,MACL,SAAU,CAAC,CACb,EACA,CACE,MAAO,MACP,IAAK,IACL,SAAU,CAAC,CACb,EACA,CACE,MAAO,IACP,IAAK,GACP,EACA,CACE,MAAO,IACP,IAAK,GACP,CACF,CACF,EACM,EAAW,CACf,UAAW,WACX,cAAe,oBACf,IAAK,OACL,SAAU,CACR,EAAK,QAAQ,EAAK,WAAY,CAC5B,MAAO,EACP,WAAY,EACd,CAAC,CACH,CACF,EACM,EAAQ,EAAK,QAAQ,EAAU,CACnC,UAAW,QACX,cAAe,0CACf,IAAK,YACP,CAAC,EACK,EAA0B,CAC9B,EACA,EACA,EACA,EAAK,kBACL,EACA,EACA,CACE,MAAO,IACT,EACA,CACE,UAAW,SACX,MAAO,cACP,SAAU,CACR,EACA,CACE,MAAO,CACT,CACF,EACA,UAAW,CACb,EACA,CACE,UAAW,SACX,MAAO,EAAkB,SACzB,UAAW,CACb,EACA,EACA,CACE,UAAW,WACX,MAAO,4BACT,EACA,CACE,MAAO,IACT,EACA,CACE,MAAO,IAAM,EAAK,eAAiB,QACnC,SAAU,CACR,EAAK,kBACL,CAGE,MAAO,sBACP,UAAW,EACX,SAAU,CAAC,CAAM,CACnB,EACA,CACE,UAAW,SACX,QAAS,MACT,SAAU,CACR,EAAK,iBACL,CACF,EACA,SAAU,CACR,CACE,MAAO,IACP,IAAK,SACP,EACA,CACE,MAAO,QACP,IAAK,WACP,CACF,CACF,CACF,EACA,UAAW,CACb,CACF,EACA,SAAM,SAAW,EAEV,CACL,KAAM,SACN,SAAU,EACV,SAAU,CACZ,CACF,CAEA,EAAO,QAAU,C","file":"static/react-syntax-highlighter_languages_highlight_elixir.b522de42.chunk.js","sourcesContent":["/*\nLanguage: Elixir\nAuthor: Josh Adams <josh@isotope11.com>\nDescription: language definition for Elixir source code files (.ex and .exs).  Based on ruby language support.\nCategory: functional\nWebsite: https://elixir-lang.org\n*/\n\n/** @type LanguageFn */\nfunction elixir(hljs) {\n  const ELIXIR_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9_.]*(!|\\\\?)?';\n  const ELIXIR_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?';\n  const ELIXIR_KEYWORDS = {\n    $pattern: ELIXIR_IDENT_RE,\n    keyword: 'and false then defined module in return redo retry end for true self when ' +\n    'next until do begin unless nil break not case cond alias while ensure or ' +\n    'include use alias fn quote require import with|0'\n  };\n  const SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /\\}/,\n    keywords: ELIXIR_KEYWORDS\n  };\n  const NUMBER = {\n    className: 'number',\n    begin: '(\\\\b0o[0-7_]+)|(\\\\b0b[01_]+)|(\\\\b0x[0-9a-fA-F_]+)|(-?\\\\b[1-9][0-9_]*(\\\\.[0-9_]+([eE][-+]?[0-9]+)?)?)',\n    relevance: 0\n  };\n  const SIGIL_DELIMITERS = '[/|([{<\"\\']';\n  const LOWERCASE_SIGIL = {\n    className: 'string',\n    begin: '~[a-z]' + '(?=' + SIGIL_DELIMITERS + ')',\n    contains: [\n      {\n        endsParent: true,\n        contains: [\n          {\n            contains: [\n              hljs.BACKSLASH_ESCAPE,\n              SUBST\n            ],\n            variants: [\n              {\n                begin: /\"/,\n                end: /\"/\n              },\n              {\n                begin: /'/,\n                end: /'/\n              },\n              {\n                begin: /\\//,\n                end: /\\//\n              },\n              {\n                begin: /\\|/,\n                end: /\\|/\n              },\n              {\n                begin: /\\(/,\n                end: /\\)/\n              },\n              {\n                begin: /\\[/,\n                end: /\\]/\n              },\n              {\n                begin: /\\{/,\n                end: /\\}/\n              },\n              {\n                begin: /</,\n                end: />/\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  };\n\n  const UPCASE_SIGIL = {\n    className: 'string',\n    begin: '~[A-Z]' + '(?=' + SIGIL_DELIMITERS + ')',\n    contains: [\n      {\n        begin: /\"/,\n        end: /\"/\n      },\n      {\n        begin: /'/,\n        end: /'/\n      },\n      {\n        begin: /\\//,\n        end: /\\//\n      },\n      {\n        begin: /\\|/,\n        end: /\\|/\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/\n      },\n      {\n        begin: /\\[/,\n        end: /\\]/\n      },\n      {\n        begin: /\\{/,\n        end: /\\}/\n      },\n      {\n        begin: /</,\n        end: />/\n      }\n    ]\n  };\n\n  const STRING = {\n    className: 'string',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ],\n    variants: [\n      {\n        begin: /\"\"\"/,\n        end: /\"\"\"/\n      },\n      {\n        begin: /'''/,\n        end: /'''/\n      },\n      {\n        begin: /~S\"\"\"/,\n        end: /\"\"\"/,\n        contains: [] // override default\n      },\n      {\n        begin: /~S\"/,\n        end: /\"/,\n        contains: [] // override default\n      },\n      {\n        begin: /~S'''/,\n        end: /'''/,\n        contains: [] // override default\n      },\n      {\n        begin: /~S'/,\n        end: /'/,\n        contains: [] // override default\n      },\n      {\n        begin: /'/,\n        end: /'/\n      },\n      {\n        begin: /\"/,\n        end: /\"/\n      }\n    ]\n  };\n  const FUNCTION = {\n    className: 'function',\n    beginKeywords: 'def defp defmacro',\n    end: /\\B\\b/, // the mode is ended by the title\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: ELIXIR_IDENT_RE,\n        endsParent: true\n      })\n    ]\n  };\n  const CLASS = hljs.inherit(FUNCTION, {\n    className: 'class',\n    beginKeywords: 'defimpl defmodule defprotocol defrecord',\n    end: /\\bdo\\b|$|;/\n  });\n  const ELIXIR_DEFAULT_CONTAINS = [\n    STRING,\n    UPCASE_SIGIL,\n    LOWERCASE_SIGIL,\n    hljs.HASH_COMMENT_MODE,\n    CLASS,\n    FUNCTION,\n    {\n      begin: '::'\n    },\n    {\n      className: 'symbol',\n      begin: ':(?![\\\\s:])',\n      contains: [\n        STRING,\n        {\n          begin: ELIXIR_METHOD_RE\n        }\n      ],\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ELIXIR_IDENT_RE + ':(?!:)',\n      relevance: 0\n    },\n    NUMBER,\n    {\n      className: 'variable',\n      begin: '(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))'\n    },\n    {\n      begin: '->'\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          // to prevent false regex triggers for the division function:\n          // /:\n          begin: /\\/: (?=\\d+\\s*[,\\]])/,\n          relevance: 0,\n          contains: [NUMBER]\n        },\n        {\n          className: 'regexp',\n          illegal: '\\\\n',\n          contains: [\n            hljs.BACKSLASH_ESCAPE,\n            SUBST\n          ],\n          variants: [\n            {\n              begin: '/',\n              end: '/[a-z]*'\n            },\n            {\n              begin: '%r\\\\[',\n              end: '\\\\][a-z]*'\n            }\n          ]\n        }\n      ],\n      relevance: 0\n    }\n  ];\n  SUBST.contains = ELIXIR_DEFAULT_CONTAINS;\n\n  return {\n    name: 'Elixir',\n    keywords: ELIXIR_KEYWORDS,\n    contains: ELIXIR_DEFAULT_CONTAINS\n  };\n}\n\nmodule.exports = elixir;\n"],"sourceRoot":""}