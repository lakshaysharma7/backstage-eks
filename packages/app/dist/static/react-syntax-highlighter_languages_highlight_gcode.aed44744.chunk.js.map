{"version":3,"sources":["webpack://app/../node_modules/highlight.js/lib/languages/gcode.js"],"names":[],"mappings":"sFAOA,WAAe,EAAM,CACnB,KAAM,GAAiB,oBACjB,EAAiB,IACjB,EAAiB,CACrB,SAAU,EACV,QAAS,2FAEX,EACM,EAAc,CAClB,UAAW,OACX,MAAO,eACT,EACM,EAAS,EAAK,QAAQ,EAAK,cAAe,CAC9C,MAAO,uCAAyC,EAAK,WACvD,CAAC,EACK,EAAa,CACjB,EAAK,oBACL,EAAK,qBACL,EAAK,QAAQ,KAAM,IAAI,EACvB,EACA,EAAK,QAAQ,EAAK,iBAAkB,CAClC,QAAS,IACX,CAAC,EACD,EAAK,QAAQ,EAAK,kBAAmB,CACnC,QAAS,IACX,CAAC,EACD,CACE,UAAW,OACX,MAAO,yBACT,EACA,CACE,UAAW,OACX,MAAO,yBACT,EACA,CACE,UAAW,OACX,MAAO,YACP,IAAK,QACP,EACA,CACE,UAAW,OACX,MAAO,qBACT,EACA,CACE,UAAW,WACX,MAAO,6DACP,SAAU,CACR,CACF,EACA,IAAK,KACP,EACA,CACE,UAAW,SACX,SAAU,CACR,CACE,MAAO,IACP,IAAK,OACL,QAAS,KACX,CACF,CACF,CACF,EAEA,MAAO,CACL,KAAM,oBACN,QAAS,CAAC,IAAI,EAGd,iBAAkB,GAClB,SAAU,EACV,SAAU,CACR,CACE,UAAW,OACX,MAAO,CACT,EACA,CACF,EAAE,OAAO,CAAU,CACrB,CACF,CAEA,EAAO,QAAU,C","file":"static/react-syntax-highlighter_languages_highlight_gcode.aed44744.chunk.js","sourcesContent":["/*\n Language: G-code (ISO 6983)\n Contributors: Adam Joseph Cook <adam.joseph.cook@gmail.com>\n Description: G-code syntax highlighter for Fanuc and other common CNC machine tool controls.\n Website: https://www.sis.se/api/document/preview/911952/\n */\n\nfunction gcode(hljs) {\n  const GCODE_IDENT_RE = '[A-Z_][A-Z0-9_.]*';\n  const GCODE_CLOSE_RE = '%';\n  const GCODE_KEYWORDS = {\n    $pattern: GCODE_IDENT_RE,\n    keyword: 'IF DO WHILE ENDWHILE CALL ENDIF SUB ENDSUB GOTO REPEAT ENDREPEAT ' +\n      'EQ LT GT NE GE LE OR XOR'\n  };\n  const GCODE_START = {\n    className: 'meta',\n    begin: '([O])([0-9]+)'\n  };\n  const NUMBER = hljs.inherit(hljs.C_NUMBER_MODE, {\n    begin: '([-+]?((\\\\.\\\\d+)|(\\\\d+)(\\\\.\\\\d*)?))|' + hljs.C_NUMBER_RE\n  });\n  const GCODE_CODE = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.COMMENT(/\\(/, /\\)/),\n    NUMBER,\n    hljs.inherit(hljs.APOS_STRING_MODE, {\n      illegal: null\n    }),\n    hljs.inherit(hljs.QUOTE_STRING_MODE, {\n      illegal: null\n    }),\n    {\n      className: 'name',\n      begin: '([G])([0-9]+\\\\.?[0-9]?)'\n    },\n    {\n      className: 'name',\n      begin: '([M])([0-9]+\\\\.?[0-9]?)'\n    },\n    {\n      className: 'attr',\n      begin: '(VC|VS|#)',\n      end: '(\\\\d+)'\n    },\n    {\n      className: 'attr',\n      begin: '(VZOFX|VZOFY|VZOFZ)'\n    },\n    {\n      className: 'built_in',\n      begin: '(ATAN|ABS|ACOS|ASIN|SIN|COS|EXP|FIX|FUP|ROUND|LN|TAN)(\\\\[)',\n      contains: [\n        NUMBER\n      ],\n      end: '\\\\]'\n    },\n    {\n      className: 'symbol',\n      variants: [\n        {\n          begin: 'N',\n          end: '\\\\d+',\n          illegal: '\\\\W'\n        }\n      ]\n    }\n  ];\n\n  return {\n    name: 'G-code (ISO 6983)',\n    aliases: ['nc'],\n    // Some implementations (CNC controls) of G-code are interoperable with uppercase and lowercase letters seamlessly.\n    // However, most prefer all uppercase and uppercase is customary.\n    case_insensitive: true,\n    keywords: GCODE_KEYWORDS,\n    contains: [\n      {\n        className: 'meta',\n        begin: GCODE_CLOSE_RE\n      },\n      GCODE_START\n    ].concat(GCODE_CODE)\n  };\n}\n\nmodule.exports = gcode;\n"],"sourceRoot":""}