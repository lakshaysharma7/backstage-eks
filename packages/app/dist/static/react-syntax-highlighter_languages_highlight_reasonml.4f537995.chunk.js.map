{"version":3,"sources":["webpack://app/../node_modules/highlight.js/lib/languages/reasonml.js"],"names":[],"mappings":"sFAOA,WAAkB,EAAM,CACtB,WAAoB,EAAK,CACvB,MAAO,GACJ,IAAI,SAAS,EAAI,CAChB,MAAO,GACJ,MAAM,EAAE,EACR,IAAI,SAAS,EAAM,CAClB,MAAO,KAAO,CAChB,CAAC,EACA,KAAK,EAAE,CACZ,CAAC,EACA,KAAK,GAAG,CACb,CAEA,KAAM,GAAW,0BACX,EAAkB,0BAElB,EAAqB,uBACrB,EAAgB,uCAAyC,EAAqB,SAAW,EAAqB,gBAC9G,EAAW,EAAW,IAAM,EAAgB,SAC5C,EAAc,IAAM,EAAW,CACnC,KACA,KACA,KACA,KACA,IACA,IACA,KACA,KACA,KACF,CAAC,EAAI,mBACC,EAAqB,OAAS,EAAc,OAE5C,EAAW,CACf,QACE,iTAIF,SACE,+FACF,QACE,YACJ,EAEM,EAAY,2HAKZ,EAAc,CAClB,UAAW,SACX,UAAW,EACX,SAAU,CACR,CACE,MAAO,CACT,EACA,CACE,MAAO,OAAS,EAAY,KAC9B,CACF,CACF,EAEM,EAAgB,CACpB,UAAW,WACX,UAAW,EACX,MAAO,CACT,EACM,EAAsB,CAC1B,CACE,UAAW,aACX,UAAW,EACX,MAAO,CACT,EACA,EACA,CACF,EAEM,EAAyB,CAC7B,EAAK,kBACL,EACA,CACE,UAAW,SACX,MAAO,MAAQ,EACf,YAAa,GACb,IAAK,IACL,SAAU,CACR,CACE,UAAW,aACX,MAAO,EACP,UAAW,CACb,CACF,CACF,CACF,EAEM,EAAkB,CACtB,CACE,UAAW,SACX,MAAO,MAAQ,EACf,YAAa,GACb,IAAK,IACL,UAAW,EACX,SAAU,CACR,CACE,UAAW,aACX,MAAO,EACP,UAAW,CACb,CACF,CACF,CACF,EAEM,EAAc,CAClB,MAAO,EACP,IAAK,cACL,UAAW,EACX,SAAU,CACR,EACA,CACE,UAAW,SACX,MAAO,IACP,IAAK,UACL,YAAa,GACb,UAAW,EACX,SAAU,CACZ,CACF,CACF,EAEM,EAAsB,CAC1B,UAAW,WACX,UAAW,EACX,SAAU,EACV,SAAU,CACR,CACE,MAAO,qBAAuB,EAAW,UACzC,IAAK,SACL,YAAa,GACb,UAAW,EACX,SAAU,CACR,CACE,UAAW,SACX,SAAU,CACR,CACE,MAAO,CACT,EACA,CACE,MAAO,CACT,EACA,CACE,MAAO,SACT,CACF,CACF,CACF,CACF,EACA,CACE,MAAO,8BACP,IAAK,QACL,YAAa,GACb,UAAW,EACX,SAAU,CACR,CACE,UAAW,SACX,UAAW,EACX,SAAU,CAAE,CAAY,CAC1B,CACF,CACF,EACA,CACE,MAAO,YAAc,EAAW,WAClC,CACF,CACF,EACA,EAAuB,KAAK,CAAmB,EAE/C,KAAM,GAAmB,CACvB,UAAW,cACX,MAAO,EAAkB,MACzB,IAAK,MACL,QAAS,MACT,SAAU,EACV,SAAU,CACR,EAAK,kBACL,EACA,CACE,UAAW,SACX,MAAO,MAAQ,CACjB,CACF,CACF,EAEM,EAA2B,CAC/B,UAAW,gBACX,MAAO,MACP,YAAa,GACb,SAAU,EACV,IAAK,KACL,UAAW,EACX,SAAU,CACR,EACA,EACA,CACE,UAAW,EACX,UAAW,cACX,MAAO,CACT,CACF,CACF,EAEM,EAAqB,CACzB,UAAW,gBACX,SAAU,EACV,YAAa,GACb,SAAU,CACR,CACE,MAAO,OAAS,EAAkB,QAAU,CAC9C,EACA,CACE,MAAO,OAAS,EAAkB,WAClC,IAAK,MACL,YAAa,GACb,SAAU,CACR,EACA,CACE,MAAO,MACP,IAAK,MACL,KAAM,EACR,CACF,EAAE,OAAO,CAAsB,CACjC,EACA,CACE,MAAO,OAAS,EAAkB,WAClC,IAAK,IACP,CACF,EACA,SAAU,CACZ,EAEA,SAAgB,KAAK,CAAkB,EAEhC,CACL,KAAM,WACN,QAAS,CAAE,IAAK,EAChB,SAAU,EACV,QAAS,sBACT,SAAU,CACR,EAAK,QAAQ,OAAQ,OAAQ,CAC3B,QAAS,aACX,CAAC,EACD,CACE,UAAW,YACX,MAAO,qBACP,QAAS,MACT,UAAW,CACb,EACA,EAAK,kBACL,CACE,UAAW,UACX,MAAO,SACP,UAAW,CACb,EACA,CACE,UAAW,UACX,MAAO,SACP,IAAK,SACL,UAAW,EACX,SAAU,CACZ,EACA,CACE,UAAW,UACX,MAAO,MACP,IAAK,MACL,UAAW,EACX,SAAU,CACZ,EACA,EACA,CACE,UAAW,WACX,MAAO,EACP,QAAS,MACT,UAAW,CACb,EACA,EACA,EAAK,oBACL,EACA,EACA,CACE,UAAW,aACX,MAAO,gBAAkB,EAAW,OAAS,EAAkB,eAC/D,IAAK,KACL,YAAa,GACb,SAAU,EACV,UAAW,EACX,SAAU,CACR,CACE,UAAW,SACX,UAAW,EACX,MAAO,CACT,EACA,CACE,MAAO,KACP,IAAK,KACL,KAAM,EACR,CACF,EAAE,OAAO,CAAsB,CACjC,EACA,CACF,CACF,CACF,CAEA,EAAO,QAAU,C","file":"static/react-syntax-highlighter_languages_highlight_reasonml.4f537995.chunk.js","sourcesContent":["/*\nLanguage: ReasonML\nDescription: Reason lets you write simple, fast and quality type safe code while leveraging both the JavaScript & OCaml ecosystems.\nWebsite: https://reasonml.github.io\nAuthor: Gidi Meir Morris <oss@gidi.io>\nCategory: functional\n*/\nfunction reasonml(hljs) {\n  function orReValues(ops) {\n    return ops\n      .map(function(op) {\n        return op\n          .split('')\n          .map(function(char) {\n            return '\\\\' + char;\n          })\n          .join('');\n      })\n      .join('|');\n  }\n\n  const RE_IDENT = '~?[a-z$_][0-9a-zA-Z$_]*';\n  const RE_MODULE_IDENT = '`?[A-Z$_][0-9a-zA-Z$_]*';\n\n  const RE_PARAM_TYPEPARAM = '\\'?[a-z$_][0-9a-z$_]*';\n  const RE_PARAM_TYPE = '\\\\s*:\\\\s*[a-z$_][0-9a-z$_]*(\\\\(\\\\s*(' + RE_PARAM_TYPEPARAM + '\\\\s*(,' + RE_PARAM_TYPEPARAM + '\\\\s*)*)?\\\\))?';\n  const RE_PARAM = RE_IDENT + '(' + RE_PARAM_TYPE + '){0,2}';\n  const RE_OPERATOR = \"(\" + orReValues([\n    '||',\n    '++',\n    '**',\n    '+.',\n    '*',\n    '/',\n    '*.',\n    '/.',\n    '...'\n  ]) + \"|\\\\|>|&&|==|===)\";\n  const RE_OPERATOR_SPACED = \"\\\\s+\" + RE_OPERATOR + \"\\\\s+\";\n\n  const KEYWORDS = {\n    keyword:\n      'and as asr assert begin class constraint do done downto else end exception external ' +\n      'for fun function functor if in include inherit initializer ' +\n      'land lazy let lor lsl lsr lxor match method mod module mutable new nonrec ' +\n      'object of open or private rec sig struct then to try type val virtual when while with',\n    built_in:\n      'array bool bytes char exn|5 float int int32 int64 list lazy_t|5 nativeint|5 ref string unit ',\n    literal:\n      'true false'\n  };\n\n  const RE_NUMBER = '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|' +\n    '0[oO][0-7_]+[Lln]?|' +\n    '0[bB][01_]+[Lln]?|' +\n    '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)';\n\n  const NUMBER_MODE = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      {\n        begin: RE_NUMBER\n      },\n      {\n        begin: '\\\\(-' + RE_NUMBER + '\\\\)'\n      }\n    ]\n  };\n\n  const OPERATOR_MODE = {\n    className: 'operator',\n    relevance: 0,\n    begin: RE_OPERATOR\n  };\n  const LIST_CONTENTS_MODES = [\n    {\n      className: 'identifier',\n      relevance: 0,\n      begin: RE_IDENT\n    },\n    OPERATOR_MODE,\n    NUMBER_MODE\n  ];\n\n  const MODULE_ACCESS_CONTENTS = [\n    hljs.QUOTE_STRING_MODE,\n    OPERATOR_MODE,\n    {\n      className: 'module',\n      begin: \"\\\\b\" + RE_MODULE_IDENT,\n      returnBegin: true,\n      end: \"\\.\",\n      contains: [\n        {\n          className: 'identifier',\n          begin: RE_MODULE_IDENT,\n          relevance: 0\n        }\n      ]\n    }\n  ];\n\n  const PARAMS_CONTENTS = [\n    {\n      className: 'module',\n      begin: \"\\\\b\" + RE_MODULE_IDENT,\n      returnBegin: true,\n      end: \"\\.\",\n      relevance: 0,\n      contains: [\n        {\n          className: 'identifier',\n          begin: RE_MODULE_IDENT,\n          relevance: 0\n        }\n      ]\n    }\n  ];\n\n  const PARAMS_MODE = {\n    begin: RE_IDENT,\n    end: '(,|\\\\n|\\\\))',\n    relevance: 0,\n    contains: [\n      OPERATOR_MODE,\n      {\n        className: 'typing',\n        begin: ':',\n        end: '(,|\\\\n)',\n        returnBegin: true,\n        relevance: 0,\n        contains: PARAMS_CONTENTS\n      }\n    ]\n  };\n\n  const FUNCTION_BLOCK_MODE = {\n    className: 'function',\n    relevance: 0,\n    keywords: KEYWORDS,\n    variants: [\n      {\n        begin: '\\\\s(\\\\(\\\\.?.*?\\\\)|' + RE_IDENT + ')\\\\s*=>',\n        end: '\\\\s*=>',\n        returnBegin: true,\n        relevance: 0,\n        contains: [\n          {\n            className: 'params',\n            variants: [\n              {\n                begin: RE_IDENT\n              },\n              {\n                begin: RE_PARAM\n              },\n              {\n                begin: /\\(\\s*\\)/\n              }\n            ]\n          }\n        ]\n      },\n      {\n        begin: '\\\\s\\\\(\\\\.?[^;\\\\|]*\\\\)\\\\s*=>',\n        end: '\\\\s=>',\n        returnBegin: true,\n        relevance: 0,\n        contains: [\n          {\n            className: 'params',\n            relevance: 0,\n            variants: [ PARAMS_MODE ]\n          }\n        ]\n      },\n      {\n        begin: '\\\\(\\\\.\\\\s' + RE_IDENT + '\\\\)\\\\s*=>'\n      }\n    ]\n  };\n  MODULE_ACCESS_CONTENTS.push(FUNCTION_BLOCK_MODE);\n\n  const CONSTRUCTOR_MODE = {\n    className: 'constructor',\n    begin: RE_MODULE_IDENT + '\\\\(',\n    end: '\\\\)',\n    illegal: '\\\\n',\n    keywords: KEYWORDS,\n    contains: [\n      hljs.QUOTE_STRING_MODE,\n      OPERATOR_MODE,\n      {\n        className: 'params',\n        begin: '\\\\b' + RE_IDENT\n      }\n    ]\n  };\n\n  const PATTERN_MATCH_BLOCK_MODE = {\n    className: 'pattern-match',\n    begin: '\\\\|',\n    returnBegin: true,\n    keywords: KEYWORDS,\n    end: '=>',\n    relevance: 0,\n    contains: [\n      CONSTRUCTOR_MODE,\n      OPERATOR_MODE,\n      {\n        relevance: 0,\n        className: 'constructor',\n        begin: RE_MODULE_IDENT\n      }\n    ]\n  };\n\n  const MODULE_ACCESS_MODE = {\n    className: 'module-access',\n    keywords: KEYWORDS,\n    returnBegin: true,\n    variants: [\n      {\n        begin: \"\\\\b(\" + RE_MODULE_IDENT + \"\\\\.)+\" + RE_IDENT\n      },\n      {\n        begin: \"\\\\b(\" + RE_MODULE_IDENT + \"\\\\.)+\\\\(\",\n        end: \"\\\\)\",\n        returnBegin: true,\n        contains: [\n          FUNCTION_BLOCK_MODE,\n          {\n            begin: '\\\\(',\n            end: '\\\\)',\n            skip: true\n          }\n        ].concat(MODULE_ACCESS_CONTENTS)\n      },\n      {\n        begin: \"\\\\b(\" + RE_MODULE_IDENT + \"\\\\.)+\\\\{\",\n        end: /\\}/\n      }\n    ],\n    contains: MODULE_ACCESS_CONTENTS\n  };\n\n  PARAMS_CONTENTS.push(MODULE_ACCESS_MODE);\n\n  return {\n    name: 'ReasonML',\n    aliases: [ 're' ],\n    keywords: KEYWORDS,\n    illegal: '(:-|:=|\\\\$\\\\{|\\\\+=)',\n    contains: [\n      hljs.COMMENT('/\\\\*', '\\\\*/', {\n        illegal: '^(#,\\\\/\\\\/)'\n      }),\n      {\n        className: 'character',\n        begin: '\\'(\\\\\\\\[^\\']+|[^\\'])\\'',\n        illegal: '\\\\n',\n        relevance: 0\n      },\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'literal',\n        begin: '\\\\(\\\\)',\n        relevance: 0\n      },\n      {\n        className: 'literal',\n        begin: '\\\\[\\\\|',\n        end: '\\\\|\\\\]',\n        relevance: 0,\n        contains: LIST_CONTENTS_MODES\n      },\n      {\n        className: 'literal',\n        begin: '\\\\[',\n        end: '\\\\]',\n        relevance: 0,\n        contains: LIST_CONTENTS_MODES\n      },\n      CONSTRUCTOR_MODE,\n      {\n        className: 'operator',\n        begin: RE_OPERATOR_SPACED,\n        illegal: '-->',\n        relevance: 0\n      },\n      NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      PATTERN_MATCH_BLOCK_MODE,\n      FUNCTION_BLOCK_MODE,\n      {\n        className: 'module-def',\n        begin: \"\\\\bmodule\\\\s+\" + RE_IDENT + \"\\\\s+\" + RE_MODULE_IDENT + \"\\\\s+=\\\\s+\\\\{\",\n        end: /\\}/,\n        returnBegin: true,\n        keywords: KEYWORDS,\n        relevance: 0,\n        contains: [\n          {\n            className: 'module',\n            relevance: 0,\n            begin: RE_MODULE_IDENT\n          },\n          {\n            begin: /\\{/,\n            end: /\\}/,\n            skip: true\n          }\n        ].concat(MODULE_ACCESS_CONTENTS)\n      },\n      MODULE_ACCESS_MODE\n    ]\n  };\n}\n\nmodule.exports = reasonml;\n"],"sourceRoot":""}