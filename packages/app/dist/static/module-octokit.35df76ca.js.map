{"version":3,"sources":["webpack://app/../node_modules/@octokit/auth-oauth-device/dist-web/index.js","webpack://app/../node_modules/@octokit/auth-oauth-user/dist-web/index.js","webpack://app/../node_modules/@octokit/auth-oauth-app/dist-web/index.js","webpack://app/../node_modules/@octokit/auth-app/dist-web/index.js","webpack://app/../node_modules/@octokit/oauth-authorization-url/dist-web/index.js","webpack://app/../node_modules/@octokit/oauth-methods/dist-node/index.js","webpack://app/../node_modules/@octokit/request-error/dist-web/index.js","webpack://app/../node_modules/@octokit/endpoint/dist-web/index.js","webpack://app/../node_modules/@octokit/request/dist-web/index.js","webpack://app/../node_modules/@octokit/graphql/dist-web/index.js","webpack://app/../node_modules/@octokit/auth-token/dist-web/index.js","webpack://app/../node_modules/@octokit/core/dist-web/index.js","webpack://app/../node_modules/@octokit/plugin-request-log/dist-web/index.js","webpack://app/../node_modules/@octokit/plugin-paginate-rest/dist-web/index.js","webpack://app/../node_modules/@octokit/plugin-rest-endpoint-methods/dist-web/index.js","webpack://app/../node_modules/@octokit/rest/dist-web/index.js"],"names":[],"mappings":"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","file":"static/module-octokit.35df76ca.js","sourcesContent":["import { getUserAgent } from 'universal-user-agent';\nimport { request } from '@octokit/request';\nimport { createDeviceCode, exchangeDeviceCode } from '@octokit/oauth-methods';\n\nasync function getOAuthAccessToken(state, options) {\n    const cachedAuthentication = getCachedAuthentication(state, options.auth);\n    if (cachedAuthentication)\n        return cachedAuthentication;\n    // Step 1: Request device and user codes\n    // https://docs.github.com/en/developers/apps/authorizing-oauth-apps#step-1-app-requests-the-device-and-user-verification-codes-from-github\n    const { data: verification } = await createDeviceCode({\n        clientType: state.clientType,\n        clientId: state.clientId,\n        request: options.request || state.request,\n        // @ts-expect-error the extra code to make TS happy is not worth it\n        scopes: options.auth.scopes || state.scopes,\n    });\n    // Step 2: User must enter the user code on https://github.com/login/device\n    // See https://docs.github.com/en/developers/apps/authorizing-oauth-apps#step-2-prompt-the-user-to-enter-the-user-code-in-a-browser\n    await state.onVerification(verification);\n    // Step 3: Exchange device code for access token\n    // See https://docs.github.com/en/developers/apps/authorizing-oauth-apps#step-3-app-polls-github-to-check-if-the-user-authorized-the-device\n    const authentication = await waitForAccessToken(options.request || state.request, state.clientId, state.clientType, verification);\n    state.authentication = authentication;\n    return authentication;\n}\nfunction getCachedAuthentication(state, auth) {\n    if (auth.refresh === true)\n        return false;\n    if (!state.authentication)\n        return false;\n    if (state.clientType === \"github-app\") {\n        return state.authentication;\n    }\n    const authentication = state.authentication;\n    const newScope = ((\"scopes\" in auth && auth.scopes) || state.scopes).join(\" \");\n    const currentScope = authentication.scopes.join(\" \");\n    return newScope === currentScope ? authentication : false;\n}\nasync function wait(seconds) {\n    await new Promise((resolve) => setTimeout(resolve, seconds * 1000));\n}\nasync function waitForAccessToken(request, clientId, clientType, verification) {\n    try {\n        const options = {\n            clientId,\n            request,\n            code: verification.device_code,\n        };\n        // WHY TYPESCRIPT WHY ARE YOU DOING THIS TO ME\n        const { authentication } = clientType === \"oauth-app\"\n            ? await exchangeDeviceCode({\n                ...options,\n                clientType: \"oauth-app\",\n            })\n            : await exchangeDeviceCode({\n                ...options,\n                clientType: \"github-app\",\n            });\n        return {\n            type: \"token\",\n            tokenType: \"oauth\",\n            ...authentication,\n        };\n    }\n    catch (error) {\n        // istanbul ignore if\n        if (!error.response)\n            throw error;\n        const errorType = error.response.data.error;\n        if (errorType === \"authorization_pending\") {\n            await wait(verification.interval);\n            return waitForAccessToken(request, clientId, clientType, verification);\n        }\n        if (errorType === \"slow_down\") {\n            await wait(verification.interval + 5);\n            return waitForAccessToken(request, clientId, clientType, verification);\n        }\n        throw error;\n    }\n}\n\nasync function auth(state, authOptions) {\n    return getOAuthAccessToken(state, {\n        auth: authOptions,\n    });\n}\n\nasync function hook(state, request, route, parameters) {\n    let endpoint = request.endpoint.merge(route, parameters);\n    // Do not intercept request to retrieve codes or token\n    if (/\\/login\\/(oauth\\/access_token|device\\/code)$/.test(endpoint.url)) {\n        return request(endpoint);\n    }\n    const { token } = await getOAuthAccessToken(state, {\n        request,\n        auth: { type: \"oauth\" },\n    });\n    endpoint.headers.authorization = `token ${token}`;\n    return request(endpoint);\n}\n\nconst VERSION = \"3.1.2\";\n\nfunction createOAuthDeviceAuth(options) {\n    const requestWithDefaults = options.request ||\n        request.defaults({\n            headers: {\n                \"user-agent\": `octokit-auth-oauth-device.js/${VERSION} ${getUserAgent()}`,\n            },\n        });\n    const { request: request$1 = requestWithDefaults, ...otherOptions } = options;\n    const state = options.clientType === \"github-app\"\n        ? {\n            ...otherOptions,\n            clientType: \"github-app\",\n            request: request$1,\n        }\n        : {\n            ...otherOptions,\n            clientType: \"oauth-app\",\n            request: request$1,\n            scopes: options.scopes || [],\n        };\n    if (!options.clientId) {\n        throw new Error('[@octokit/auth-oauth-device] \"clientId\" option must be set (https://github.com/octokit/auth-oauth-device.js#usage)');\n    }\n    if (!options.onVerification) {\n        throw new Error('[@octokit/auth-oauth-device] \"onVerification\" option must be a function (https://github.com/octokit/auth-oauth-device.js#usage)');\n    }\n    // @ts-ignore too much for tsc / ts-jest ¯\\_(ツ)_/¯\n    return Object.assign(auth.bind(null, state), {\n        hook: hook.bind(null, state),\n    });\n}\n\nexport { createOAuthDeviceAuth };\n//# sourceMappingURL=index.js.map\n","import { getUserAgent } from 'universal-user-agent';\nimport { request } from '@octokit/request';\nimport { createOAuthDeviceAuth } from '@octokit/auth-oauth-device';\nimport { exchangeWebFlowCode, refreshToken, checkToken, resetToken, deleteToken, deleteAuthorization } from '@octokit/oauth-methods';\nimport btoa from 'btoa-lite';\n\nconst VERSION = \"1.3.0\";\n\n// @ts-nocheck there is only place for one of us in this file. And it's not you, TS\nasync function getAuthentication(state) {\n    // handle code exchange form OAuth Web Flow\n    if (\"code\" in state.strategyOptions) {\n        const { authentication } = await exchangeWebFlowCode({\n            clientId: state.clientId,\n            clientSecret: state.clientSecret,\n            clientType: state.clientType,\n            ...state.strategyOptions,\n            request: state.request,\n        });\n        return {\n            type: \"token\",\n            tokenType: \"oauth\",\n            ...authentication,\n        };\n    }\n    // handle OAuth device flow\n    if (\"onVerification\" in state.strategyOptions) {\n        const deviceAuth = createOAuthDeviceAuth({\n            clientType: state.clientType,\n            clientId: state.clientId,\n            ...state.strategyOptions,\n            request: state.request,\n        });\n        const authentication = await deviceAuth({\n            type: \"oauth\",\n        });\n        return {\n            clientSecret: state.clientSecret,\n            ...authentication,\n        };\n    }\n    // use existing authentication\n    if (\"token\" in state.strategyOptions) {\n        return {\n            type: \"token\",\n            tokenType: \"oauth\",\n            clientId: state.clientId,\n            clientSecret: state.clientSecret,\n            clientType: state.clientType,\n            ...state.strategyOptions,\n        };\n    }\n    throw new Error(\"[@octokit/auth-oauth-user] Invalid strategy options\");\n}\n\nasync function auth(state, options = {}) {\n    if (!state.authentication) {\n        // This is what TS makes us do ¯\\_(ツ)_/¯\n        state.authentication =\n            state.clientType === \"oauth-app\"\n                ? await getAuthentication(state)\n                : await getAuthentication(state);\n    }\n    if (state.authentication.invalid) {\n        throw new Error(\"[@octokit/auth-oauth-user] Token is invalid\");\n    }\n    const currentAuthentication = state.authentication;\n    // (auto) refresh for user-to-server tokens\n    if (\"expiresAt\" in currentAuthentication) {\n        if (options.type === \"refresh\" ||\n            new Date(currentAuthentication.expiresAt) < new Date()) {\n            const { authentication } = await refreshToken({\n                clientType: \"github-app\",\n                clientId: state.clientId,\n                clientSecret: state.clientSecret,\n                refreshToken: currentAuthentication.refreshToken,\n                request: state.request,\n            });\n            state.authentication = {\n                tokenType: \"oauth\",\n                type: \"token\",\n                ...authentication,\n            };\n        }\n    }\n    // throw error for invalid refresh call\n    if (options.type === \"refresh\") {\n        if (state.clientType === \"oauth-app\") {\n            throw new Error(\"[@octokit/auth-oauth-user] OAuth Apps do not support expiring tokens\");\n        }\n        if (!currentAuthentication.hasOwnProperty(\"expiresAt\")) {\n            throw new Error(\"[@octokit/auth-oauth-user] Refresh token missing\");\n        }\n    }\n    // check or reset token\n    if (options.type === \"check\" || options.type === \"reset\") {\n        const method = options.type === \"check\" ? checkToken : resetToken;\n        try {\n            const { authentication } = await method({\n                // @ts-expect-error making TS happy would require unnecessary code so no\n                clientType: state.clientType,\n                clientId: state.clientId,\n                clientSecret: state.clientSecret,\n                token: state.authentication.token,\n                request: state.request,\n            });\n            state.authentication = {\n                tokenType: \"oauth\",\n                type: \"token\",\n                // @ts-expect-error TBD\n                ...authentication,\n            };\n            return state.authentication;\n        }\n        catch (error) {\n            // istanbul ignore else\n            if (error.status === 404) {\n                error.message = \"[@octokit/auth-oauth-user] Token is invalid\";\n                // @ts-expect-error TBD\n                state.authentication.invalid = true;\n            }\n            throw error;\n        }\n    }\n    // invalidate\n    if (options.type === \"delete\" || options.type === \"deleteAuthorization\") {\n        const method = options.type === \"delete\" ? deleteToken : deleteAuthorization;\n        try {\n            await method({\n                // @ts-expect-error making TS happy would require unnecessary code so no\n                clientType: state.clientType,\n                clientId: state.clientId,\n                clientSecret: state.clientSecret,\n                token: state.authentication.token,\n                request: state.request,\n            });\n        }\n        catch (error) {\n            // istanbul ignore if\n            if (error.status !== 404)\n                throw error;\n        }\n        state.authentication.invalid = true;\n        return state.authentication;\n    }\n    return state.authentication;\n}\n\n/**\n * The following endpoints require an OAuth App to authenticate using its client_id and client_secret.\n *\n * - [`POST /applications/{client_id}/token`](https://docs.github.com/en/rest/reference/apps#check-a-token) - Check a token\n * - [`PATCH /applications/{client_id}/token`](https://docs.github.com/en/rest/reference/apps#reset-a-token) - Reset a token\n * - [`POST /applications/{client_id}/token/scoped`](https://docs.github.com/en/rest/reference/apps#create-a-scoped-access-token) - Create a scoped access token\n * - [`DELETE /applications/{client_id}/token`](https://docs.github.com/en/rest/reference/apps#delete-an-app-token) - Delete an app token\n * - [`DELETE /applications/{client_id}/grant`](https://docs.github.com/en/rest/reference/apps#delete-an-app-authorization) - Delete an app authorization\n *\n * deprecated:\n *\n * - [`GET /applications/{client_id}/tokens/{access_token}`](https://docs.github.com/en/rest/reference/apps#check-an-authorization) - Check an authorization\n * - [`POST /applications/{client_id}/tokens/{access_token}`](https://docs.github.com/en/rest/reference/apps#reset-an-authorization) - Reset an authorization\n * - [`DELETE /applications/{client_id}/tokens/{access_token}`](https://docs.github.com/en/rest/reference/apps#revoke-an-authorization-for-an-application) - Revoke an authorization for an application\n * - [`DELETE /applications/{client_id}/grants/{access_token}`](https://docs.github.com/en/rest/reference/apps#revoke-a-grant-for-an-application) - Revoke a grant for an application\n */\nconst ROUTES_REQUIRING_BASIC_AUTH = /\\/applications\\/[^/]+\\/(token|grant)s?/;\nfunction requiresBasicAuth(url) {\n    return url && ROUTES_REQUIRING_BASIC_AUTH.test(url);\n}\n\nasync function hook(state, request, route, parameters = {}) {\n    const endpoint = request.endpoint.merge(route, parameters);\n    // Do not intercept OAuth Web/Device flow request\n    if (/\\/login\\/(oauth\\/access_token|device\\/code)$/.test(endpoint.url)) {\n        return request(endpoint);\n    }\n    if (requiresBasicAuth(endpoint.url)) {\n        const credentials = btoa(`${state.clientId}:${state.clientSecret}`);\n        endpoint.headers.authorization = `basic ${credentials}`;\n        return request(endpoint);\n    }\n    // TS makes us do this ¯\\_(ツ)_/¯\n    const { token } = state.clientType === \"oauth-app\"\n        ? await auth({ ...state, request })\n        : await auth({ ...state, request });\n    endpoint.headers.authorization = \"token \" + token;\n    return request(endpoint);\n}\n\nfunction createOAuthUserAuth({ clientId, clientSecret, clientType = \"oauth-app\", request: request$1 = request.defaults({\n    headers: {\n        \"user-agent\": `octokit-auth-oauth-app.js/${VERSION} ${getUserAgent()}`,\n    },\n}), ...strategyOptions }) {\n    const state = Object.assign({\n        clientType,\n        clientId,\n        clientSecret,\n        strategyOptions,\n        request: request$1,\n    });\n    // @ts-expect-error not worth the extra code needed to appease TS\n    return Object.assign(auth.bind(null, state), {\n        // @ts-expect-error not worth the extra code needed to appease TS\n        hook: hook.bind(null, state),\n    });\n}\ncreateOAuthUserAuth.VERSION = VERSION;\n\nexport { createOAuthUserAuth, requiresBasicAuth };\n//# sourceMappingURL=index.js.map\n","import { getUserAgent } from 'universal-user-agent';\nimport { request } from '@octokit/request';\nimport btoa from 'btoa-lite';\nimport { createOAuthUserAuth, requiresBasicAuth } from '@octokit/auth-oauth-user';\nexport { createOAuthUserAuth } from '@octokit/auth-oauth-user';\n\nasync function auth(state, authOptions) {\n    if (authOptions.type === \"oauth-app\") {\n        return {\n            type: \"oauth-app\",\n            clientId: state.clientId,\n            clientSecret: state.clientSecret,\n            clientType: state.clientType,\n            headers: {\n                authorization: `basic ${btoa(`${state.clientId}:${state.clientSecret}`)}`,\n            },\n        };\n    }\n    if (\"factory\" in authOptions) {\n        const { type, ...options } = {\n            ...authOptions,\n            ...state,\n        };\n        // @ts-expect-error TODO: `option` cannot be never, is this a bug?\n        return authOptions.factory(options);\n    }\n    const common = {\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        request: state.request,\n        ...authOptions,\n    };\n    // TS: Look what you made me do\n    const userAuth = state.clientType === \"oauth-app\"\n        ? await createOAuthUserAuth({\n            ...common,\n            clientType: state.clientType,\n        })\n        : await createOAuthUserAuth({\n            ...common,\n            clientType: state.clientType,\n        });\n    return userAuth();\n}\n\nasync function hook(state, request, route, parameters) {\n    let endpoint = request.endpoint.merge(route, parameters);\n    // Do not intercept OAuth Web/Device flow request\n    if (/\\/login\\/(oauth\\/access_token|device\\/code)$/.test(endpoint.url)) {\n        return request(endpoint);\n    }\n    if (state.clientType === \"github-app\" && !requiresBasicAuth(endpoint.url)) {\n        throw new Error(`[@octokit/auth-oauth-app] GitHub Apps cannot use their client ID/secret for basic authentication for endpoints other than \"/applications/{client_id}/**\". \"${endpoint.method} ${endpoint.url}\" is not supported.`);\n    }\n    const credentials = btoa(`${state.clientId}:${state.clientSecret}`);\n    endpoint.headers.authorization = `basic ${credentials}`;\n    try {\n        return await request(endpoint);\n    }\n    catch (error) {\n        /* istanbul ignore if */\n        if (error.status !== 401)\n            throw error;\n        error.message = `[@octokit/auth-oauth-app] \"${endpoint.method} ${endpoint.url}\" does not support clientId/clientSecret basic authentication.`;\n        throw error;\n    }\n}\n\nconst VERSION = \"4.3.1\";\n\nfunction createOAuthAppAuth(options) {\n    const state = Object.assign({\n        request: request.defaults({\n            headers: {\n                \"user-agent\": `octokit-auth-oauth-app.js/${VERSION} ${getUserAgent()}`,\n            },\n        }),\n        clientType: \"oauth-app\",\n    }, options);\n    // @ts-expect-error not worth the extra code to appease TS\n    return Object.assign(auth.bind(null, state), {\n        hook: hook.bind(null, state),\n    });\n}\n\nexport { createOAuthAppAuth };\n//# sourceMappingURL=index.js.map\n","import { getUserAgent } from 'universal-user-agent';\nimport { request } from '@octokit/request';\nimport { createOAuthAppAuth } from '@octokit/auth-oauth-app';\nimport { Deprecation } from 'deprecation';\nimport { githubAppJwt } from 'universal-github-app-jwt';\nimport LRU from 'lru-cache';\nimport { requiresBasicAuth } from '@octokit/auth-oauth-user';\nexport { createOAuthUserAuth } from '@octokit/auth-oauth-user';\n\nasync function getAppAuthentication({ appId, privateKey, timeDifference, }) {\n    try {\n        const appAuthentication = await githubAppJwt({\n            id: +appId,\n            privateKey,\n            now: timeDifference && Math.floor(Date.now() / 1000) + timeDifference,\n        });\n        return {\n            type: \"app\",\n            token: appAuthentication.token,\n            appId: appAuthentication.appId,\n            expiresAt: new Date(appAuthentication.expiration * 1000).toISOString(),\n        };\n    }\n    catch (error) {\n        if (privateKey === \"-----BEGIN RSA PRIVATE KEY-----\") {\n            throw new Error(\"The 'privateKey` option contains only the first line '-----BEGIN RSA PRIVATE KEY-----'. If you are setting it using a `.env` file, make sure it is set on a single line with newlines replaced by '\\n'\");\n        }\n        else {\n            throw error;\n        }\n    }\n}\n\n// https://github.com/isaacs/node-lru-cache#readme\nfunction getCache() {\n    return new LRU({\n        // cache max. 15000 tokens, that will use less than 10mb memory\n        max: 15000,\n        // Cache for 1 minute less than GitHub expiry\n        maxAge: 1000 * 60 * 59,\n    });\n}\nasync function get(cache, options) {\n    const cacheKey = optionsToCacheKey(options);\n    const result = await cache.get(cacheKey);\n    if (!result) {\n        return;\n    }\n    const [token, createdAt, expiresAt, repositorySelection, permissionsString, singleFileName,] = result.split(\"|\");\n    const permissions = options.permissions ||\n        permissionsString.split(/,/).reduce((permissions, string) => {\n            if (/!$/.test(string)) {\n                permissions[string.slice(0, -1)] = \"write\";\n            }\n            else {\n                permissions[string] = \"read\";\n            }\n            return permissions;\n        }, {});\n    return {\n        token,\n        createdAt,\n        expiresAt,\n        permissions,\n        repositoryIds: options.repositoryIds,\n        repositoryNames: options.repositoryNames,\n        singleFileName,\n        repositorySelection: repositorySelection,\n    };\n}\nasync function set(cache, options, data) {\n    const key = optionsToCacheKey(options);\n    const permissionsString = options.permissions\n        ? \"\"\n        : Object.keys(data.permissions)\n            .map((name) => `${name}${data.permissions[name] === \"write\" ? \"!\" : \"\"}`)\n            .join(\",\");\n    const value = [\n        data.token,\n        data.createdAt,\n        data.expiresAt,\n        data.repositorySelection,\n        permissionsString,\n        data.singleFileName,\n    ].join(\"|\");\n    await cache.set(key, value);\n}\nfunction optionsToCacheKey({ installationId, permissions = {}, repositoryIds = [], repositoryNames = [], }) {\n    const permissionsString = Object.keys(permissions)\n        .sort()\n        .map((name) => (permissions[name] === \"read\" ? name : `${name}!`))\n        .join(\",\");\n    const repositoryIdsString = repositoryIds.sort().join(\",\");\n    const repositoryNamesString = repositoryNames.join(\",\");\n    return [\n        installationId,\n        repositoryIdsString,\n        repositoryNamesString,\n        permissionsString,\n    ]\n        .filter(Boolean)\n        .join(\"|\");\n}\n\nfunction toTokenAuthentication({ installationId, token, createdAt, expiresAt, repositorySelection, permissions, repositoryIds, repositoryNames, singleFileName, }) {\n    return Object.assign({\n        type: \"token\",\n        tokenType: \"installation\",\n        token,\n        installationId,\n        permissions,\n        createdAt,\n        expiresAt,\n        repositorySelection,\n    }, repositoryIds ? { repositoryIds } : null, repositoryNames ? { repositoryNames } : null, singleFileName ? { singleFileName } : null);\n}\n\nasync function getInstallationAuthentication(state, options, customRequest) {\n    const installationId = Number(options.installationId || state.installationId);\n    if (!installationId) {\n        throw new Error(\"[@octokit/auth-app] installationId option is required for installation authentication.\");\n    }\n    if (options.factory) {\n        const { type, factory, oauthApp, ...factoryAuthOptions } = {\n            ...state,\n            ...options,\n        };\n        // @ts-expect-error if `options.factory` is set, the return type for `auth()` should be `Promise<ReturnType<options.factory>>`\n        return factory(factoryAuthOptions);\n    }\n    const optionsWithInstallationTokenFromState = Object.assign({ installationId }, options);\n    if (!options.refresh) {\n        const result = await get(state.cache, optionsWithInstallationTokenFromState);\n        if (result) {\n            const { token, createdAt, expiresAt, permissions, repositoryIds, repositoryNames, singleFileName, repositorySelection, } = result;\n            return toTokenAuthentication({\n                installationId,\n                token,\n                createdAt,\n                expiresAt,\n                permissions,\n                repositorySelection,\n                repositoryIds,\n                repositoryNames,\n                singleFileName,\n            });\n        }\n    }\n    const appAuthentication = await getAppAuthentication(state);\n    const request = customRequest || state.request;\n    const { data: { token, expires_at: expiresAt, repositories, permissions: permissionsOptional, repository_selection: repositorySelectionOptional, single_file: singleFileName, }, } = await request(\"POST /app/installations/{installation_id}/access_tokens\", {\n        installation_id: installationId,\n        repository_ids: options.repositoryIds,\n        repositories: options.repositoryNames,\n        permissions: options.permissions,\n        mediaType: {\n            previews: [\"machine-man\"],\n        },\n        headers: {\n            authorization: `bearer ${appAuthentication.token}`,\n        },\n    });\n    /* istanbul ignore next - permissions are optional per OpenAPI spec, but we think that is incorrect */\n    const permissions = permissionsOptional || {};\n    /* istanbul ignore next - repositorySelection are optional per OpenAPI spec, but we think that is incorrect */\n    const repositorySelection = repositorySelectionOptional || \"all\";\n    const repositoryIds = repositories\n        ? repositories.map((r) => r.id)\n        : void 0;\n    const repositoryNames = repositories\n        ? repositories.map((repo) => repo.name)\n        : void 0;\n    const createdAt = new Date().toISOString();\n    await set(state.cache, optionsWithInstallationTokenFromState, {\n        token,\n        createdAt,\n        expiresAt,\n        repositorySelection,\n        permissions,\n        repositoryIds,\n        repositoryNames,\n        singleFileName,\n    });\n    return toTokenAuthentication({\n        installationId,\n        token,\n        createdAt,\n        expiresAt,\n        repositorySelection,\n        permissions,\n        repositoryIds,\n        repositoryNames,\n        singleFileName,\n    });\n}\n\nasync function auth(state, authOptions) {\n    switch (authOptions.type) {\n        case \"app\":\n            return getAppAuthentication(state);\n        // @ts-expect-error \"oauth\" is not supperted in types\n        case \"oauth\":\n            state.log.warn(\n            // @ts-expect-error `log.warn()` expects string\n            new Deprecation(`[@octokit/auth-app] {type: \"oauth\"} is deprecated. Use {type: \"oauth-app\"} instead`));\n        case \"oauth-app\":\n            return state.oauthApp({ type: \"oauth-app\" });\n        case \"installation\":\n            return getInstallationAuthentication(state, {\n                ...authOptions,\n                type: \"installation\",\n            });\n        case \"oauth-user\":\n            // @ts-expect-error TODO: infer correct auth options type based on type. authOptions should be typed as \"WebFlowAuthOptions | OAuthAppDeviceFlowAuthOptions | GitHubAppDeviceFlowAuthOptions\"\n            return state.oauthApp(authOptions);\n        default:\n            // @ts-expect-error type is \"never\" at this point\n            throw new Error(`Invalid auth type: ${authOptions.type}`);\n    }\n}\n\nconst PATHS = [\n    \"/app\",\n    \"/app/hook/config\",\n    \"/app/hook/deliveries\",\n    \"/app/hook/deliveries/{delivery_id}\",\n    \"/app/hook/deliveries/{delivery_id}/attempts\",\n    \"/app/installations\",\n    \"/app/installations/{installation_id}\",\n    \"/app/installations/{installation_id}/access_tokens\",\n    \"/app/installations/{installation_id}/suspended\",\n    \"/marketplace_listing/accounts/{account_id}\",\n    \"/marketplace_listing/plan\",\n    \"/marketplace_listing/plans\",\n    \"/marketplace_listing/plans/{plan_id}/accounts\",\n    \"/marketplace_listing/stubbed/accounts/{account_id}\",\n    \"/marketplace_listing/stubbed/plan\",\n    \"/marketplace_listing/stubbed/plans\",\n    \"/marketplace_listing/stubbed/plans/{plan_id}/accounts\",\n    \"/orgs/{org}/installation\",\n    \"/repos/{owner}/{repo}/installation\",\n    \"/users/{username}/installation\",\n];\n// CREDIT: Simon Grondin (https://github.com/SGrondin)\n// https://github.com/octokit/plugin-throttling.js/blob/45c5d7f13b8af448a9dbca468d9c9150a73b3948/lib/route-matcher.js\nfunction routeMatcher(paths) {\n    // EXAMPLE. For the following paths:\n    /* [\n        \"/orgs/{org}/invitations\",\n        \"/repos/{owner}/{repo}/collaborators/{username}\"\n    ] */\n    const regexes = paths.map((p) => p\n        .split(\"/\")\n        .map((c) => (c.startsWith(\"{\") ? \"(?:.+?)\" : c))\n        .join(\"/\"));\n    // 'regexes' would contain:\n    /* [\n        '/orgs/(?:.+?)/invitations',\n        '/repos/(?:.+?)/(?:.+?)/collaborators/(?:.+?)'\n    ] */\n    const regex = `^(?:${regexes.map((r) => `(?:${r})`).join(\"|\")})[^/]*$`;\n    // 'regex' would contain:\n    /*\n      ^(?:(?:\\/orgs\\/(?:.+?)\\/invitations)|(?:\\/repos\\/(?:.+?)\\/(?:.+?)\\/collaborators\\/(?:.+?)))[^\\/]*$\n  \n      It may look scary, but paste it into https://www.debuggex.com/\n      and it will make a lot more sense!\n    */\n    return new RegExp(regex, \"i\");\n}\nconst REGEX = routeMatcher(PATHS);\nfunction requiresAppAuth(url) {\n    return !!url && REGEX.test(url);\n}\n\nconst FIVE_SECONDS_IN_MS = 5 * 1000;\nfunction isNotTimeSkewError(error) {\n    return !(error.message.match(/'Expiration time' claim \\('exp'\\) must be a numeric value representing the future time at which the assertion expires/) ||\n        error.message.match(/'Issued at' claim \\('iat'\\) must be an Integer representing the time that the assertion was issued/));\n}\nasync function hook(state, request, route, parameters) {\n    const endpoint = request.endpoint.merge(route, parameters);\n    const url = endpoint.url;\n    // Do not intercept request to retrieve a new token\n    if (/\\/login\\/oauth\\/access_token$/.test(url)) {\n        return request(endpoint);\n    }\n    if (requiresAppAuth(url.replace(request.endpoint.DEFAULTS.baseUrl, \"\"))) {\n        const { token } = await getAppAuthentication(state);\n        endpoint.headers.authorization = `bearer ${token}`;\n        let response;\n        try {\n            response = await request(endpoint);\n        }\n        catch (error) {\n            // If there's an issue with the expiration, regenerate the token and try again.\n            // Otherwise rethrow the error for upstream handling.\n            if (isNotTimeSkewError(error)) {\n                throw error;\n            }\n            // If the date header is missing, we can't correct the system time skew.\n            // Throw the error to be handled upstream.\n            if (typeof error.response.headers.date === \"undefined\") {\n                throw error;\n            }\n            const diff = Math.floor((Date.parse(error.response.headers.date) -\n                Date.parse(new Date().toString())) /\n                1000);\n            state.log.warn(error.message);\n            state.log.warn(`[@octokit/auth-app] GitHub API time and system time are different by ${diff} seconds. Retrying request with the difference accounted for.`);\n            const { token } = await getAppAuthentication({\n                ...state,\n                timeDifference: diff,\n            });\n            endpoint.headers.authorization = `bearer ${token}`;\n            return request(endpoint);\n        }\n        return response;\n    }\n    if (requiresBasicAuth(url)) {\n        const authentication = await state.oauthApp({ type: \"oauth-app\" });\n        endpoint.headers.authorization = authentication.headers.authorization;\n        return request(endpoint);\n    }\n    const { token, createdAt } = await getInstallationAuthentication(state, \n    // @ts-expect-error TBD\n    {}, request);\n    endpoint.headers.authorization = `token ${token}`;\n    return sendRequestWithRetries(state, request, endpoint, createdAt);\n}\n/**\n * Newly created tokens might not be accessible immediately after creation.\n * In case of a 401 response, we retry with an exponential delay until more\n * than five seconds pass since the creation of the token.\n *\n * @see https://github.com/octokit/auth-app.js/issues/65\n */\nasync function sendRequestWithRetries(state, request, options, createdAt, retries = 0) {\n    const timeSinceTokenCreationInMs = +new Date() - +new Date(createdAt);\n    try {\n        return await request(options);\n    }\n    catch (error) {\n        if (error.status !== 401) {\n            throw error;\n        }\n        if (timeSinceTokenCreationInMs >= FIVE_SECONDS_IN_MS) {\n            if (retries > 0) {\n                error.message = `After ${retries} retries within ${timeSinceTokenCreationInMs / 1000}s of creating the installation access token, the response remains 401. At this point, the cause may be an authentication problem or a system outage. Please check https://www.githubstatus.com for status information`;\n            }\n            throw error;\n        }\n        ++retries;\n        const awaitTime = retries * 1000;\n        state.log.warn(`[@octokit/auth-app] Retrying after 401 response to account for token replication delay (retry: ${retries}, wait: ${awaitTime / 1000}s)`);\n        await new Promise((resolve) => setTimeout(resolve, awaitTime));\n        return sendRequestWithRetries(state, request, options, createdAt, retries);\n    }\n}\n\nconst VERSION = \"3.6.1\";\n\nfunction createAppAuth(options) {\n    if (!options.appId) {\n        throw new Error(\"[@octokit/auth-app] appId option is required\");\n    }\n    if (!options.privateKey) {\n        throw new Error(\"[@octokit/auth-app] privateKey option is required\");\n    }\n    if (\"installationId\" in options && !options.installationId) {\n        throw new Error(\"[@octokit/auth-app] installationId is set to a falsy value\");\n    }\n    const log = Object.assign({\n        warn: console.warn.bind(console),\n    }, options.log);\n    const request$1 = options.request ||\n        request.defaults({\n            headers: {\n                \"user-agent\": `octokit-auth-app.js/${VERSION} ${getUserAgent()}`,\n            },\n        });\n    const state = Object.assign({\n        request: request$1,\n        cache: getCache(),\n    }, options, options.installationId\n        ? { installationId: Number(options.installationId) }\n        : {}, {\n        log,\n        oauthApp: createOAuthAppAuth({\n            clientType: \"github-app\",\n            clientId: options.clientId || \"\",\n            clientSecret: options.clientSecret || \"\",\n            request: request$1,\n        }),\n    });\n    // @ts-expect-error not worth the extra code to appease TS\n    return Object.assign(auth.bind(null, state), {\n        hook: hook.bind(null, state),\n    });\n}\n\nexport { createAppAuth };\n//# sourceMappingURL=index.js.map\n","function oauthAuthorizationUrl(options) {\n    const clientType = options.clientType || \"oauth-app\";\n    const baseUrl = options.baseUrl || \"https://github.com\";\n    const result = {\n        clientType,\n        allowSignup: options.allowSignup === false ? false : true,\n        clientId: options.clientId,\n        login: options.login || null,\n        redirectUrl: options.redirectUrl || null,\n        state: options.state || Math.random().toString(36).substr(2),\n        url: \"\",\n    };\n    if (clientType === \"oauth-app\") {\n        const scopes = \"scopes\" in options ? options.scopes : [];\n        result.scopes =\n            typeof scopes === \"string\"\n                ? scopes.split(/[,\\s]+/).filter(Boolean)\n                : scopes;\n    }\n    result.url = urlBuilderAuthorize(`${baseUrl}/login/oauth/authorize`, result);\n    return result;\n}\nfunction urlBuilderAuthorize(base, options) {\n    const map = {\n        allowSignup: \"allow_signup\",\n        clientId: \"client_id\",\n        login: \"login\",\n        redirectUrl: \"redirect_uri\",\n        scopes: \"scope\",\n        state: \"state\",\n    };\n    let url = base;\n    Object.keys(map)\n        // Filter out keys that are null and remove the url key\n        .filter((k) => options[k] !== null)\n        // Filter out empty scopes array\n        .filter((k) => {\n        if (k !== \"scopes\")\n            return true;\n        if (options.clientType === \"github-app\")\n            return false;\n        return !Array.isArray(options[k]) || options[k].length > 0;\n    })\n        // Map Array with the proper URL parameter names and change the value to a string using template strings\n        // @ts-ignore\n        .map((key) => [map[key], `${options[key]}`])\n        // Finally, build the URL\n        .forEach(([key, value], index) => {\n        url += index === 0 ? `?` : \"&\";\n        url += `${key}=${encodeURIComponent(value)}`;\n    });\n    return url;\n}\n\nexport { oauthAuthorizationUrl };\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar oauthAuthorizationUrl = require('@octokit/oauth-authorization-url');\nvar request = require('@octokit/request');\nvar requestError = require('@octokit/request-error');\nvar btoa = _interopDefault(require('btoa-lite'));\n\nconst VERSION = \"1.2.6\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction requestToOAuthBaseUrl(request) {\n  const endpointDefaults = request.endpoint.DEFAULTS;\n  return /^https:\\/\\/(api\\.)?github\\.com$/.test(endpointDefaults.baseUrl) ? \"https://github.com\" : endpointDefaults.baseUrl.replace(\"/api/v3\", \"\");\n}\nasync function oauthRequest(request, route, parameters) {\n  const withOAuthParameters = _objectSpread2({\n    baseUrl: requestToOAuthBaseUrl(request),\n    headers: {\n      accept: \"application/json\"\n    }\n  }, parameters);\n\n  const response = await request(route, withOAuthParameters);\n\n  if (\"error\" in response.data) {\n    const error = new requestError.RequestError(`${response.data.error_description} (${response.data.error}, ${response.data.error_uri})`, 400, {\n      request: request.endpoint.merge(route, withOAuthParameters),\n      headers: response.headers\n    }); // @ts-ignore add custom response property until https://github.com/octokit/request-error.js/issues/169 is resolved\n\n    error.response = response;\n    throw error;\n  }\n\n  return response;\n}\n\nconst _excluded = [\"request\"];\nfunction getWebFlowAuthorizationUrl(_ref) {\n  let {\n    request: request$1 = request.request\n  } = _ref,\n      options = _objectWithoutProperties(_ref, _excluded);\n\n  const baseUrl = requestToOAuthBaseUrl(request$1); // @ts-expect-error TypeScript wants `clientType` to be set explicitly ¯\\_(ツ)_/¯\n\n  return oauthAuthorizationUrl.oauthAuthorizationUrl(_objectSpread2(_objectSpread2({}, options), {}, {\n    baseUrl\n  }));\n}\n\nasync function exchangeWebFlowCode(options) {\n  const request$1 = options.request ||\n  /* istanbul ignore next: we always pass a custom request in tests */\n  request.request;\n  const response = await oauthRequest(request$1, \"POST /login/oauth/access_token\", {\n    client_id: options.clientId,\n    client_secret: options.clientSecret,\n    code: options.code,\n    redirect_uri: options.redirectUrl\n  });\n  const authentication = {\n    clientType: options.clientType,\n    clientId: options.clientId,\n    clientSecret: options.clientSecret,\n    token: response.data.access_token,\n    scopes: response.data.scope.split(/\\s+/).filter(Boolean)\n  };\n\n  if (options.clientType === \"github-app\") {\n    if (\"refresh_token\" in response.data) {\n      const apiTimeInMs = new Date(response.headers.date).getTime();\n      authentication.refreshToken = response.data.refresh_token, authentication.expiresAt = toTimestamp(apiTimeInMs, response.data.expires_in), authentication.refreshTokenExpiresAt = toTimestamp(apiTimeInMs, response.data.refresh_token_expires_in);\n    }\n\n    delete authentication.scopes;\n  }\n\n  return _objectSpread2(_objectSpread2({}, response), {}, {\n    authentication\n  });\n}\n\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n  return new Date(apiTimeInMs + expirationInSeconds * 1000).toISOString();\n}\n\nasync function createDeviceCode(options) {\n  const request$1 = options.request ||\n  /* istanbul ignore next: we always pass a custom request in tests */\n  request.request;\n  const parameters = {\n    client_id: options.clientId\n  };\n\n  if (\"scopes\" in options && Array.isArray(options.scopes)) {\n    parameters.scope = options.scopes.join(\" \");\n  }\n\n  return oauthRequest(request$1, \"POST /login/device/code\", parameters);\n}\n\nasync function exchangeDeviceCode(options) {\n  const request$1 = options.request ||\n  /* istanbul ignore next: we always pass a custom request in tests */\n  request.request;\n  const response = await oauthRequest(request$1, \"POST /login/oauth/access_token\", {\n    client_id: options.clientId,\n    device_code: options.code,\n    grant_type: \"urn:ietf:params:oauth:grant-type:device_code\"\n  });\n  const authentication = {\n    clientType: options.clientType,\n    clientId: options.clientId,\n    token: response.data.access_token,\n    scopes: response.data.scope.split(/\\s+/).filter(Boolean)\n  };\n\n  if (\"clientSecret\" in options) {\n    authentication.clientSecret = options.clientSecret;\n  }\n\n  if (options.clientType === \"github-app\") {\n    if (\"refresh_token\" in response.data) {\n      const apiTimeInMs = new Date(response.headers.date).getTime();\n      authentication.refreshToken = response.data.refresh_token, authentication.expiresAt = toTimestamp$1(apiTimeInMs, response.data.expires_in), authentication.refreshTokenExpiresAt = toTimestamp$1(apiTimeInMs, response.data.refresh_token_expires_in);\n    }\n\n    delete authentication.scopes;\n  }\n\n  return _objectSpread2(_objectSpread2({}, response), {}, {\n    authentication\n  });\n}\n\nfunction toTimestamp$1(apiTimeInMs, expirationInSeconds) {\n  return new Date(apiTimeInMs + expirationInSeconds * 1000).toISOString();\n}\n\nasync function checkToken(options) {\n  const request$1 = options.request ||\n  /* istanbul ignore next: we always pass a custom request in tests */\n  request.request;\n  const response = await request$1(\"POST /applications/{client_id}/token\", {\n    headers: {\n      authorization: `basic ${btoa(`${options.clientId}:${options.clientSecret}`)}`\n    },\n    client_id: options.clientId,\n    access_token: options.token\n  });\n  const authentication = {\n    clientType: options.clientType,\n    clientId: options.clientId,\n    clientSecret: options.clientSecret,\n    token: options.token,\n    scopes: response.data.scopes\n  };\n  if (response.data.expires_at) authentication.expiresAt = response.data.expires_at;\n\n  if (options.clientType === \"github-app\") {\n    delete authentication.scopes;\n  }\n\n  return _objectSpread2(_objectSpread2({}, response), {}, {\n    authentication\n  });\n}\n\nasync function refreshToken(options) {\n  const request$1 = options.request ||\n  /* istanbul ignore next: we always pass a custom request in tests */\n  request.request;\n  const response = await oauthRequest(request$1, \"POST /login/oauth/access_token\", {\n    client_id: options.clientId,\n    client_secret: options.clientSecret,\n    grant_type: \"refresh_token\",\n    refresh_token: options.refreshToken\n  });\n  const apiTimeInMs = new Date(response.headers.date).getTime();\n  const authentication = {\n    clientType: \"github-app\",\n    clientId: options.clientId,\n    clientSecret: options.clientSecret,\n    token: response.data.access_token,\n    refreshToken: response.data.refresh_token,\n    expiresAt: toTimestamp$2(apiTimeInMs, response.data.expires_in),\n    refreshTokenExpiresAt: toTimestamp$2(apiTimeInMs, response.data.refresh_token_expires_in)\n  };\n  return _objectSpread2(_objectSpread2({}, response), {}, {\n    authentication\n  });\n}\n\nfunction toTimestamp$2(apiTimeInMs, expirationInSeconds) {\n  return new Date(apiTimeInMs + expirationInSeconds * 1000).toISOString();\n}\n\nconst _excluded$1 = [\"request\", \"clientType\", \"clientId\", \"clientSecret\", \"token\"];\nasync function scopeToken(options) {\n  const {\n    request: request$1,\n    clientType,\n    clientId,\n    clientSecret,\n    token\n  } = options,\n        requestOptions = _objectWithoutProperties(options, _excluded$1);\n\n  const response = await (request$1 ||\n  /* istanbul ignore next: we always pass a custom request in tests */\n  request.request)(\"POST /applications/{client_id}/token/scoped\", _objectSpread2({\n    headers: {\n      authorization: `basic ${btoa(`${clientId}:${clientSecret}`)}`\n    },\n    client_id: clientId,\n    access_token: token\n  }, requestOptions));\n  const authentication = Object.assign({\n    clientType,\n    clientId,\n    clientSecret,\n    token: response.data.token\n  }, response.data.expires_at ? {\n    expiresAt: response.data.expires_at\n  } : {});\n  return _objectSpread2(_objectSpread2({}, response), {}, {\n    authentication\n  });\n}\n\nasync function resetToken(options) {\n  const request$1 = options.request ||\n  /* istanbul ignore next: we always pass a custom request in tests */\n  request.request;\n  const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n  const response = await request$1(\"PATCH /applications/{client_id}/token\", {\n    headers: {\n      authorization: `basic ${auth}`\n    },\n    client_id: options.clientId,\n    access_token: options.token\n  });\n  const authentication = {\n    clientType: options.clientType,\n    clientId: options.clientId,\n    clientSecret: options.clientSecret,\n    token: response.data.token,\n    scopes: response.data.scopes\n  };\n  if (response.data.expires_at) authentication.expiresAt = response.data.expires_at;\n\n  if (options.clientType === \"github-app\") {\n    delete authentication.scopes;\n  }\n\n  return _objectSpread2(_objectSpread2({}, response), {}, {\n    authentication\n  });\n}\n\nasync function deleteToken(options) {\n  const request$1 = options.request ||\n  /* istanbul ignore next: we always pass a custom request in tests */\n  request.request;\n  const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n  return request$1(\"DELETE /applications/{client_id}/token\", {\n    headers: {\n      authorization: `basic ${auth}`\n    },\n    client_id: options.clientId,\n    access_token: options.token\n  });\n}\n\nasync function deleteAuthorization(options) {\n  const request$1 = options.request ||\n  /* istanbul ignore next: we always pass a custom request in tests */\n  request.request;\n  const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n  return request$1(\"DELETE /applications/{client_id}/grant\", {\n    headers: {\n      authorization: `basic ${auth}`\n    },\n    client_id: options.clientId,\n    access_token: options.token\n  });\n}\n\nexports.VERSION = VERSION;\nexports.checkToken = checkToken;\nexports.createDeviceCode = createDeviceCode;\nexports.deleteAuthorization = deleteAuthorization;\nexports.deleteToken = deleteToken;\nexports.exchangeDeviceCode = exchangeDeviceCode;\nexports.exchangeWebFlowCode = exchangeWebFlowCode;\nexports.getWebFlowAuthorizationUrl = getWebFlowAuthorizationUrl;\nexports.refreshToken = refreshToken;\nexports.resetToken = resetToken;\nexports.scopeToken = scopeToken;\n//# sourceMappingURL=index.js.map\n","import { Deprecation } from 'deprecation';\nimport once from 'once';\n\nconst logOnceCode = once((deprecation) => console.warn(deprecation));\nconst logOnceHeaders = once((deprecation) => console.warn(deprecation));\n/**\n * Error with extra properties to help with debugging\n */\nclass RequestError extends Error {\n    constructor(message, statusCode, options) {\n        super(message);\n        // Maintains proper stack trace (only available on V8)\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n        this.name = \"HttpError\";\n        this.status = statusCode;\n        let headers;\n        if (\"headers\" in options && typeof options.headers !== \"undefined\") {\n            headers = options.headers;\n        }\n        if (\"response\" in options) {\n            this.response = options.response;\n            headers = options.response.headers;\n        }\n        // redact request credentials without mutating original request options\n        const requestCopy = Object.assign({}, options.request);\n        if (options.request.headers.authorization) {\n            requestCopy.headers = Object.assign({}, options.request.headers, {\n                authorization: options.request.headers.authorization.replace(/ .*$/, \" [REDACTED]\"),\n            });\n        }\n        requestCopy.url = requestCopy.url\n            // client_id & client_secret can be passed as URL query parameters to increase rate limit\n            // see https://developer.github.com/v3/#increasing-the-unauthenticated-rate-limit-for-oauth-applications\n            .replace(/\\bclient_secret=\\w+/g, \"client_secret=[REDACTED]\")\n            // OAuth tokens can be passed as URL query parameters, although it is not recommended\n            // see https://developer.github.com/v3/#oauth2-token-sent-in-a-header\n            .replace(/\\baccess_token=\\w+/g, \"access_token=[REDACTED]\");\n        this.request = requestCopy;\n        // deprecations\n        Object.defineProperty(this, \"code\", {\n            get() {\n                logOnceCode(new Deprecation(\"[@octokit/request-error] `error.code` is deprecated, use `error.status`.\"));\n                return statusCode;\n            },\n        });\n        Object.defineProperty(this, \"headers\", {\n            get() {\n                logOnceHeaders(new Deprecation(\"[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.\"));\n                return headers || {};\n            },\n        });\n    }\n}\n\nexport { RequestError };\n//# sourceMappingURL=index.js.map\n","import { isPlainObject } from 'is-plain-object';\nimport { getUserAgent } from 'universal-user-agent';\n\nfunction lowercaseKeys(object) {\n    if (!object) {\n        return {};\n    }\n    return Object.keys(object).reduce((newObj, key) => {\n        newObj[key.toLowerCase()] = object[key];\n        return newObj;\n    }, {});\n}\n\nfunction mergeDeep(defaults, options) {\n    const result = Object.assign({}, defaults);\n    Object.keys(options).forEach((key) => {\n        if (isPlainObject(options[key])) {\n            if (!(key in defaults))\n                Object.assign(result, { [key]: options[key] });\n            else\n                result[key] = mergeDeep(defaults[key], options[key]);\n        }\n        else {\n            Object.assign(result, { [key]: options[key] });\n        }\n    });\n    return result;\n}\n\nfunction removeUndefinedProperties(obj) {\n    for (const key in obj) {\n        if (obj[key] === undefined) {\n            delete obj[key];\n        }\n    }\n    return obj;\n}\n\nfunction merge(defaults, route, options) {\n    if (typeof route === \"string\") {\n        let [method, url] = route.split(\" \");\n        options = Object.assign(url ? { method, url } : { url: method }, options);\n    }\n    else {\n        options = Object.assign({}, route);\n    }\n    // lowercase header names before merging with defaults to avoid duplicates\n    options.headers = lowercaseKeys(options.headers);\n    // remove properties with undefined values before merging\n    removeUndefinedProperties(options);\n    removeUndefinedProperties(options.headers);\n    const mergedOptions = mergeDeep(defaults || {}, options);\n    // mediaType.previews arrays are merged, instead of overwritten\n    if (defaults && defaults.mediaType.previews.length) {\n        mergedOptions.mediaType.previews = defaults.mediaType.previews\n            .filter((preview) => !mergedOptions.mediaType.previews.includes(preview))\n            .concat(mergedOptions.mediaType.previews);\n    }\n    mergedOptions.mediaType.previews = mergedOptions.mediaType.previews.map((preview) => preview.replace(/-preview/, \"\"));\n    return mergedOptions;\n}\n\nfunction addQueryParameters(url, parameters) {\n    const separator = /\\?/.test(url) ? \"&\" : \"?\";\n    const names = Object.keys(parameters);\n    if (names.length === 0) {\n        return url;\n    }\n    return (url +\n        separator +\n        names\n            .map((name) => {\n            if (name === \"q\") {\n                return (\"q=\" + parameters.q.split(\"+\").map(encodeURIComponent).join(\"+\"));\n            }\n            return `${name}=${encodeURIComponent(parameters[name])}`;\n        })\n            .join(\"&\"));\n}\n\nconst urlVariableRegex = /\\{[^}]+\\}/g;\nfunction removeNonChars(variableName) {\n    return variableName.replace(/^\\W+|\\W+$/g, \"\").split(/,/);\n}\nfunction extractUrlVariableNames(url) {\n    const matches = url.match(urlVariableRegex);\n    if (!matches) {\n        return [];\n    }\n    return matches.map(removeNonChars).reduce((a, b) => a.concat(b), []);\n}\n\nfunction omit(object, keysToOmit) {\n    return Object.keys(object)\n        .filter((option) => !keysToOmit.includes(option))\n        .reduce((obj, key) => {\n        obj[key] = object[key];\n        return obj;\n    }, {});\n}\n\n// Based on https://github.com/bramstein/url-template, licensed under BSD\n// TODO: create separate package.\n//\n// Copyright (c) 2012-2014, Bram Stein\n// All rights reserved.\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions\n// are met:\n//  1. Redistributions of source code must retain the above copyright\n//     notice, this list of conditions and the following disclaimer.\n//  2. Redistributions in binary form must reproduce the above copyright\n//     notice, this list of conditions and the following disclaimer in the\n//     documentation and/or other materials provided with the distribution.\n//  3. The name of the author may not be used to endorse or promote products\n//     derived from this software without specific prior written permission.\n// THIS SOFTWARE IS PROVIDED BY THE AUTHOR \"AS IS\" AND ANY EXPRESS OR IMPLIED\n// WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\n// EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n// EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n/* istanbul ignore file */\nfunction encodeReserved(str) {\n    return str\n        .split(/(%[0-9A-Fa-f]{2})/g)\n        .map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part).replace(/%5B/g, \"[\").replace(/%5D/g, \"]\");\n        }\n        return part;\n    })\n        .join(\"\");\n}\nfunction encodeUnreserved(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n        return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n}\nfunction encodeValue(operator, value, key) {\n    value =\n        operator === \"+\" || operator === \"#\"\n            ? encodeReserved(value)\n            : encodeUnreserved(value);\n    if (key) {\n        return encodeUnreserved(key) + \"=\" + value;\n    }\n    else {\n        return value;\n    }\n}\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\nfunction isKeyOperator(operator) {\n    return operator === \";\" || operator === \"&\" || operator === \"?\";\n}\nfunction getValues(context, operator, key, modifier) {\n    var value = context[key], result = [];\n    if (isDefined(value) && value !== \"\") {\n        if (typeof value === \"string\" ||\n            typeof value === \"number\" ||\n            typeof value === \"boolean\") {\n            value = value.toString();\n            if (modifier && modifier !== \"*\") {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : \"\"));\n        }\n        else {\n            if (modifier === \"*\") {\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : \"\"));\n                    });\n                }\n                else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            result.push(encodeValue(operator, value[k], k));\n                        }\n                    });\n                }\n            }\n            else {\n                const tmp = [];\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        tmp.push(encodeValue(operator, value));\n                    });\n                }\n                else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            tmp.push(encodeUnreserved(k));\n                            tmp.push(encodeValue(operator, value[k].toString()));\n                        }\n                    });\n                }\n                if (isKeyOperator(operator)) {\n                    result.push(encodeUnreserved(key) + \"=\" + tmp.join(\",\"));\n                }\n                else if (tmp.length !== 0) {\n                    result.push(tmp.join(\",\"));\n                }\n            }\n        }\n    }\n    else {\n        if (operator === \";\") {\n            if (isDefined(value)) {\n                result.push(encodeUnreserved(key));\n            }\n        }\n        else if (value === \"\" && (operator === \"&\" || operator === \"?\")) {\n            result.push(encodeUnreserved(key) + \"=\");\n        }\n        else if (value === \"\") {\n            result.push(\"\");\n        }\n    }\n    return result;\n}\nfunction parseUrl(template) {\n    return {\n        expand: expand.bind(null, template),\n    };\n}\nfunction expand(template, context) {\n    var operators = [\"+\", \"#\", \".\", \"/\", \";\", \"?\", \"&\"];\n    return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n        if (expression) {\n            let operator = \"\";\n            const values = [];\n            if (operators.indexOf(expression.charAt(0)) !== -1) {\n                operator = expression.charAt(0);\n                expression = expression.substr(1);\n            }\n            expression.split(/,/g).forEach(function (variable) {\n                var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                values.push(getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n            });\n            if (operator && operator !== \"+\") {\n                var separator = \",\";\n                if (operator === \"?\") {\n                    separator = \"&\";\n                }\n                else if (operator !== \"#\") {\n                    separator = operator;\n                }\n                return (values.length !== 0 ? operator : \"\") + values.join(separator);\n            }\n            else {\n                return values.join(\",\");\n            }\n        }\n        else {\n            return encodeReserved(literal);\n        }\n    });\n}\n\nfunction parse(options) {\n    // https://fetch.spec.whatwg.org/#methods\n    let method = options.method.toUpperCase();\n    // replace :varname with {varname} to make it RFC 6570 compatible\n    let url = (options.url || \"/\").replace(/:([a-z]\\w+)/g, \"{$1}\");\n    let headers = Object.assign({}, options.headers);\n    let body;\n    let parameters = omit(options, [\n        \"method\",\n        \"baseUrl\",\n        \"url\",\n        \"headers\",\n        \"request\",\n        \"mediaType\",\n    ]);\n    // extract variable names from URL to calculate remaining variables later\n    const urlVariableNames = extractUrlVariableNames(url);\n    url = parseUrl(url).expand(parameters);\n    if (!/^http/.test(url)) {\n        url = options.baseUrl + url;\n    }\n    const omittedParameters = Object.keys(options)\n        .filter((option) => urlVariableNames.includes(option))\n        .concat(\"baseUrl\");\n    const remainingParameters = omit(parameters, omittedParameters);\n    const isBinaryRequest = /application\\/octet-stream/i.test(headers.accept);\n    if (!isBinaryRequest) {\n        if (options.mediaType.format) {\n            // e.g. application/vnd.github.v3+json => application/vnd.github.v3.raw\n            headers.accept = headers.accept\n                .split(/,/)\n                .map((preview) => preview.replace(/application\\/vnd(\\.\\w+)(\\.v3)?(\\.\\w+)?(\\+json)?$/, `application/vnd$1$2.${options.mediaType.format}`))\n                .join(\",\");\n        }\n        if (options.mediaType.previews.length) {\n            const previewsFromAcceptHeader = headers.accept.match(/[\\w-]+(?=-preview)/g) || [];\n            headers.accept = previewsFromAcceptHeader\n                .concat(options.mediaType.previews)\n                .map((preview) => {\n                const format = options.mediaType.format\n                    ? `.${options.mediaType.format}`\n                    : \"+json\";\n                return `application/vnd.github.${preview}-preview${format}`;\n            })\n                .join(\",\");\n        }\n    }\n    // for GET/HEAD requests, set URL query parameters from remaining parameters\n    // for PATCH/POST/PUT/DELETE requests, set request body from remaining parameters\n    if ([\"GET\", \"HEAD\"].includes(method)) {\n        url = addQueryParameters(url, remainingParameters);\n    }\n    else {\n        if (\"data\" in remainingParameters) {\n            body = remainingParameters.data;\n        }\n        else {\n            if (Object.keys(remainingParameters).length) {\n                body = remainingParameters;\n            }\n            else {\n                headers[\"content-length\"] = 0;\n            }\n        }\n    }\n    // default content-type for JSON if body is set\n    if (!headers[\"content-type\"] && typeof body !== \"undefined\") {\n        headers[\"content-type\"] = \"application/json; charset=utf-8\";\n    }\n    // GitHub expects 'content-length: 0' header for PUT/PATCH requests without body.\n    // fetch does not allow to set `content-length` header, but we can set body to an empty string\n    if ([\"PATCH\", \"PUT\"].includes(method) && typeof body === \"undefined\") {\n        body = \"\";\n    }\n    // Only return body/request keys if present\n    return Object.assign({ method, url, headers }, typeof body !== \"undefined\" ? { body } : null, options.request ? { request: options.request } : null);\n}\n\nfunction endpointWithDefaults(defaults, route, options) {\n    return parse(merge(defaults, route, options));\n}\n\nfunction withDefaults(oldDefaults, newDefaults) {\n    const DEFAULTS = merge(oldDefaults, newDefaults);\n    const endpoint = endpointWithDefaults.bind(null, DEFAULTS);\n    return Object.assign(endpoint, {\n        DEFAULTS,\n        defaults: withDefaults.bind(null, DEFAULTS),\n        merge: merge.bind(null, DEFAULTS),\n        parse,\n    });\n}\n\nconst VERSION = \"6.0.12\";\n\nconst userAgent = `octokit-endpoint.js/${VERSION} ${getUserAgent()}`;\n// DEFAULTS has all properties set that EndpointOptions has, except url.\n// So we use RequestParameters and add method as additional required property.\nconst DEFAULTS = {\n    method: \"GET\",\n    baseUrl: \"https://api.github.com\",\n    headers: {\n        accept: \"application/vnd.github.v3+json\",\n        \"user-agent\": userAgent,\n    },\n    mediaType: {\n        format: \"\",\n        previews: [],\n    },\n};\n\nconst endpoint = withDefaults(null, DEFAULTS);\n\nexport { endpoint };\n//# sourceMappingURL=index.js.map\n","import { endpoint } from '@octokit/endpoint';\nimport { getUserAgent } from 'universal-user-agent';\nimport { isPlainObject } from 'is-plain-object';\nimport nodeFetch from 'node-fetch';\nimport { RequestError } from '@octokit/request-error';\n\nconst VERSION = \"5.6.3\";\n\nfunction getBufferResponse(response) {\n    return response.arrayBuffer();\n}\n\nfunction fetchWrapper(requestOptions) {\n    const log = requestOptions.request && requestOptions.request.log\n        ? requestOptions.request.log\n        : console;\n    if (isPlainObject(requestOptions.body) ||\n        Array.isArray(requestOptions.body)) {\n        requestOptions.body = JSON.stringify(requestOptions.body);\n    }\n    let headers = {};\n    let status;\n    let url;\n    const fetch = (requestOptions.request && requestOptions.request.fetch) || nodeFetch;\n    return fetch(requestOptions.url, Object.assign({\n        method: requestOptions.method,\n        body: requestOptions.body,\n        headers: requestOptions.headers,\n        redirect: requestOptions.redirect,\n    }, \n    // `requestOptions.request.agent` type is incompatible\n    // see https://github.com/octokit/types.ts/pull/264\n    requestOptions.request))\n        .then(async (response) => {\n        url = response.url;\n        status = response.status;\n        for (const keyAndValue of response.headers) {\n            headers[keyAndValue[0]] = keyAndValue[1];\n        }\n        if (\"deprecation\" in headers) {\n            const matches = headers.link && headers.link.match(/<([^>]+)>; rel=\"deprecation\"/);\n            const deprecationLink = matches && matches.pop();\n            log.warn(`[@octokit/request] \"${requestOptions.method} ${requestOptions.url}\" is deprecated. It is scheduled to be removed on ${headers.sunset}${deprecationLink ? `. See ${deprecationLink}` : \"\"}`);\n        }\n        if (status === 204 || status === 205) {\n            return;\n        }\n        // GitHub API returns 200 for HEAD requests\n        if (requestOptions.method === \"HEAD\") {\n            if (status < 400) {\n                return;\n            }\n            throw new RequestError(response.statusText, status, {\n                response: {\n                    url,\n                    status,\n                    headers,\n                    data: undefined,\n                },\n                request: requestOptions,\n            });\n        }\n        if (status === 304) {\n            throw new RequestError(\"Not modified\", status, {\n                response: {\n                    url,\n                    status,\n                    headers,\n                    data: await getResponseData(response),\n                },\n                request: requestOptions,\n            });\n        }\n        if (status >= 400) {\n            const data = await getResponseData(response);\n            const error = new RequestError(toErrorMessage(data), status, {\n                response: {\n                    url,\n                    status,\n                    headers,\n                    data,\n                },\n                request: requestOptions,\n            });\n            throw error;\n        }\n        return getResponseData(response);\n    })\n        .then((data) => {\n        return {\n            status,\n            url,\n            headers,\n            data,\n        };\n    })\n        .catch((error) => {\n        if (error instanceof RequestError)\n            throw error;\n        throw new RequestError(error.message, 500, {\n            request: requestOptions,\n        });\n    });\n}\nasync function getResponseData(response) {\n    const contentType = response.headers.get(\"content-type\");\n    if (/application\\/json/.test(contentType)) {\n        return response.json();\n    }\n    if (!contentType || /^text\\/|charset=utf-8$/.test(contentType)) {\n        return response.text();\n    }\n    return getBufferResponse(response);\n}\nfunction toErrorMessage(data) {\n    if (typeof data === \"string\")\n        return data;\n    // istanbul ignore else - just in case\n    if (\"message\" in data) {\n        if (Array.isArray(data.errors)) {\n            return `${data.message}: ${data.errors.map(JSON.stringify).join(\", \")}`;\n        }\n        return data.message;\n    }\n    // istanbul ignore next - just in case\n    return `Unknown error: ${JSON.stringify(data)}`;\n}\n\nfunction withDefaults(oldEndpoint, newDefaults) {\n    const endpoint = oldEndpoint.defaults(newDefaults);\n    const newApi = function (route, parameters) {\n        const endpointOptions = endpoint.merge(route, parameters);\n        if (!endpointOptions.request || !endpointOptions.request.hook) {\n            return fetchWrapper(endpoint.parse(endpointOptions));\n        }\n        const request = (route, parameters) => {\n            return fetchWrapper(endpoint.parse(endpoint.merge(route, parameters)));\n        };\n        Object.assign(request, {\n            endpoint,\n            defaults: withDefaults.bind(null, endpoint),\n        });\n        return endpointOptions.request.hook(request, endpointOptions);\n    };\n    return Object.assign(newApi, {\n        endpoint,\n        defaults: withDefaults.bind(null, endpoint),\n    });\n}\n\nconst request = withDefaults(endpoint, {\n    headers: {\n        \"user-agent\": `octokit-request.js/${VERSION} ${getUserAgent()}`,\n    },\n});\n\nexport { request };\n//# sourceMappingURL=index.js.map\n","import { request } from '@octokit/request';\nimport { getUserAgent } from 'universal-user-agent';\n\nconst VERSION = \"4.8.0\";\n\nfunction _buildMessageForResponseErrors(data) {\n    return (`Request failed due to following response errors:\\n` +\n        data.errors.map((e) => ` - ${e.message}`).join(\"\\n\"));\n}\nclass GraphqlResponseError extends Error {\n    constructor(request, headers, response) {\n        super(_buildMessageForResponseErrors(response));\n        this.request = request;\n        this.headers = headers;\n        this.response = response;\n        this.name = \"GraphqlResponseError\";\n        // Expose the errors and response data in their shorthand properties.\n        this.errors = response.errors;\n        this.data = response.data;\n        // Maintains proper stack trace (only available on V8)\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n}\n\nconst NON_VARIABLE_OPTIONS = [\n    \"method\",\n    \"baseUrl\",\n    \"url\",\n    \"headers\",\n    \"request\",\n    \"query\",\n    \"mediaType\",\n];\nconst FORBIDDEN_VARIABLE_OPTIONS = [\"query\", \"method\", \"url\"];\nconst GHES_V3_SUFFIX_REGEX = /\\/api\\/v3\\/?$/;\nfunction graphql(request, query, options) {\n    if (options) {\n        if (typeof query === \"string\" && \"query\" in options) {\n            return Promise.reject(new Error(`[@octokit/graphql] \"query\" cannot be used as variable name`));\n        }\n        for (const key in options) {\n            if (!FORBIDDEN_VARIABLE_OPTIONS.includes(key))\n                continue;\n            return Promise.reject(new Error(`[@octokit/graphql] \"${key}\" cannot be used as variable name`));\n        }\n    }\n    const parsedOptions = typeof query === \"string\" ? Object.assign({ query }, options) : query;\n    const requestOptions = Object.keys(parsedOptions).reduce((result, key) => {\n        if (NON_VARIABLE_OPTIONS.includes(key)) {\n            result[key] = parsedOptions[key];\n            return result;\n        }\n        if (!result.variables) {\n            result.variables = {};\n        }\n        result.variables[key] = parsedOptions[key];\n        return result;\n    }, {});\n    // workaround for GitHub Enterprise baseUrl set with /api/v3 suffix\n    // https://github.com/octokit/auth-app.js/issues/111#issuecomment-657610451\n    const baseUrl = parsedOptions.baseUrl || request.endpoint.DEFAULTS.baseUrl;\n    if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {\n        requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, \"/api/graphql\");\n    }\n    return request(requestOptions).then((response) => {\n        if (response.data.errors) {\n            const headers = {};\n            for (const key of Object.keys(response.headers)) {\n                headers[key] = response.headers[key];\n            }\n            throw new GraphqlResponseError(requestOptions, headers, response.data);\n        }\n        return response.data.data;\n    });\n}\n\nfunction withDefaults(request$1, newDefaults) {\n    const newRequest = request$1.defaults(newDefaults);\n    const newApi = (query, options) => {\n        return graphql(newRequest, query, options);\n    };\n    return Object.assign(newApi, {\n        defaults: withDefaults.bind(null, newRequest),\n        endpoint: request.endpoint,\n    });\n}\n\nconst graphql$1 = withDefaults(request, {\n    headers: {\n        \"user-agent\": `octokit-graphql.js/${VERSION} ${getUserAgent()}`,\n    },\n    method: \"POST\",\n    url: \"/graphql\",\n});\nfunction withCustomRequest(customRequest) {\n    return withDefaults(customRequest, {\n        method: \"POST\",\n        url: \"/graphql\",\n    });\n}\n\nexport { GraphqlResponseError, graphql$1 as graphql, withCustomRequest };\n//# sourceMappingURL=index.js.map\n","const REGEX_IS_INSTALLATION_LEGACY = /^v1\\./;\nconst REGEX_IS_INSTALLATION = /^ghs_/;\nconst REGEX_IS_USER_TO_SERVER = /^ghu_/;\nasync function auth(token) {\n    const isApp = token.split(/\\./).length === 3;\n    const isInstallation = REGEX_IS_INSTALLATION_LEGACY.test(token) ||\n        REGEX_IS_INSTALLATION.test(token);\n    const isUserToServer = REGEX_IS_USER_TO_SERVER.test(token);\n    const tokenType = isApp\n        ? \"app\"\n        : isInstallation\n            ? \"installation\"\n            : isUserToServer\n                ? \"user-to-server\"\n                : \"oauth\";\n    return {\n        type: \"token\",\n        token: token,\n        tokenType,\n    };\n}\n\n/**\n * Prefix token for usage in the Authorization header\n *\n * @param token OAuth token or JSON Web Token\n */\nfunction withAuthorizationPrefix(token) {\n    if (token.split(/\\./).length === 3) {\n        return `bearer ${token}`;\n    }\n    return `token ${token}`;\n}\n\nasync function hook(token, request, route, parameters) {\n    const endpoint = request.endpoint.merge(route, parameters);\n    endpoint.headers.authorization = withAuthorizationPrefix(token);\n    return request(endpoint);\n}\n\nconst createTokenAuth = function createTokenAuth(token) {\n    if (!token) {\n        throw new Error(\"[@octokit/auth-token] No token passed to createTokenAuth\");\n    }\n    if (typeof token !== \"string\") {\n        throw new Error(\"[@octokit/auth-token] Token passed to createTokenAuth is not a string\");\n    }\n    token = token.replace(/^(token|bearer) +/i, \"\");\n    return Object.assign(auth.bind(null, token), {\n        hook: hook.bind(null, token),\n    });\n};\n\nexport { createTokenAuth };\n//# sourceMappingURL=index.js.map\n","import { getUserAgent } from 'universal-user-agent';\nimport { Collection } from 'before-after-hook';\nimport { request } from '@octokit/request';\nimport { withCustomRequest } from '@octokit/graphql';\nimport { createTokenAuth } from '@octokit/auth-token';\n\nconst VERSION = \"3.6.0\";\n\nclass Octokit {\n    constructor(options = {}) {\n        const hook = new Collection();\n        const requestDefaults = {\n            baseUrl: request.endpoint.DEFAULTS.baseUrl,\n            headers: {},\n            request: Object.assign({}, options.request, {\n                // @ts-ignore internal usage only, no need to type\n                hook: hook.bind(null, \"request\"),\n            }),\n            mediaType: {\n                previews: [],\n                format: \"\",\n            },\n        };\n        // prepend default user agent with `options.userAgent` if set\n        requestDefaults.headers[\"user-agent\"] = [\n            options.userAgent,\n            `octokit-core.js/${VERSION} ${getUserAgent()}`,\n        ]\n            .filter(Boolean)\n            .join(\" \");\n        if (options.baseUrl) {\n            requestDefaults.baseUrl = options.baseUrl;\n        }\n        if (options.previews) {\n            requestDefaults.mediaType.previews = options.previews;\n        }\n        if (options.timeZone) {\n            requestDefaults.headers[\"time-zone\"] = options.timeZone;\n        }\n        this.request = request.defaults(requestDefaults);\n        this.graphql = withCustomRequest(this.request).defaults(requestDefaults);\n        this.log = Object.assign({\n            debug: () => { },\n            info: () => { },\n            warn: console.warn.bind(console),\n            error: console.error.bind(console),\n        }, options.log);\n        this.hook = hook;\n        // (1) If neither `options.authStrategy` nor `options.auth` are set, the `octokit` instance\n        //     is unauthenticated. The `this.auth()` method is a no-op and no request hook is registered.\n        // (2) If only `options.auth` is set, use the default token authentication strategy.\n        // (3) If `options.authStrategy` is set then use it and pass in `options.auth`. Always pass own request as many strategies accept a custom request instance.\n        // TODO: type `options.auth` based on `options.authStrategy`.\n        if (!options.authStrategy) {\n            if (!options.auth) {\n                // (1)\n                this.auth = async () => ({\n                    type: \"unauthenticated\",\n                });\n            }\n            else {\n                // (2)\n                const auth = createTokenAuth(options.auth);\n                // @ts-ignore  ¯\\_(ツ)_/¯\n                hook.wrap(\"request\", auth.hook);\n                this.auth = auth;\n            }\n        }\n        else {\n            const { authStrategy, ...otherOptions } = options;\n            const auth = authStrategy(Object.assign({\n                request: this.request,\n                log: this.log,\n                // we pass the current octokit instance as well as its constructor options\n                // to allow for authentication strategies that return a new octokit instance\n                // that shares the same internal state as the current one. The original\n                // requirement for this was the \"event-octokit\" authentication strategy\n                // of https://github.com/probot/octokit-auth-probot.\n                octokit: this,\n                octokitOptions: otherOptions,\n            }, options.auth));\n            // @ts-ignore  ¯\\_(ツ)_/¯\n            hook.wrap(\"request\", auth.hook);\n            this.auth = auth;\n        }\n        // apply plugins\n        // https://stackoverflow.com/a/16345172\n        const classConstructor = this.constructor;\n        classConstructor.plugins.forEach((plugin) => {\n            Object.assign(this, plugin(this, options));\n        });\n    }\n    static defaults(defaults) {\n        const OctokitWithDefaults = class extends this {\n            constructor(...args) {\n                const options = args[0] || {};\n                if (typeof defaults === \"function\") {\n                    super(defaults(options));\n                    return;\n                }\n                super(Object.assign({}, defaults, options, options.userAgent && defaults.userAgent\n                    ? {\n                        userAgent: `${options.userAgent} ${defaults.userAgent}`,\n                    }\n                    : null));\n            }\n        };\n        return OctokitWithDefaults;\n    }\n    /**\n     * Attach a plugin (or many) to your Octokit instance.\n     *\n     * @example\n     * const API = Octokit.plugin(plugin1, plugin2, plugin3, ...)\n     */\n    static plugin(...newPlugins) {\n        var _a;\n        const currentPlugins = this.plugins;\n        const NewOctokit = (_a = class extends this {\n            },\n            _a.plugins = currentPlugins.concat(newPlugins.filter((plugin) => !currentPlugins.includes(plugin))),\n            _a);\n        return NewOctokit;\n    }\n}\nOctokit.VERSION = VERSION;\nOctokit.plugins = [];\n\nexport { Octokit };\n//# sourceMappingURL=index.js.map\n","const VERSION = \"1.0.4\";\n\n/**\n * @param octokit Octokit instance\n * @param options Options passed to Octokit constructor\n */\nfunction requestLog(octokit) {\n    octokit.hook.wrap(\"request\", (request, options) => {\n        octokit.log.debug(\"request\", options);\n        const start = Date.now();\n        const requestOptions = octokit.request.endpoint.parse(options);\n        const path = requestOptions.url.replace(options.baseUrl, \"\");\n        return request(options)\n            .then((response) => {\n            octokit.log.info(`${requestOptions.method} ${path} - ${response.status} in ${Date.now() - start}ms`);\n            return response;\n        })\n            .catch((error) => {\n            octokit.log.info(`${requestOptions.method} ${path} - ${error.status} in ${Date.now() - start}ms`);\n            throw error;\n        });\n    });\n}\nrequestLog.VERSION = VERSION;\n\nexport { requestLog };\n//# sourceMappingURL=index.js.map\n","const VERSION = \"2.17.0\";\n\n/**\n * Some “list” response that can be paginated have a different response structure\n *\n * They have a `total_count` key in the response (search also has `incomplete_results`,\n * /installation/repositories also has `repository_selection`), as well as a key with\n * the list of the items which name varies from endpoint to endpoint.\n *\n * Octokit normalizes these responses so that paginated results are always returned following\n * the same structure. One challenge is that if the list response has only one page, no Link\n * header is provided, so this header alone is not sufficient to check wether a response is\n * paginated or not.\n *\n * We check if a \"total_count\" key is present in the response data, but also make sure that\n * a \"url\" property is not, as the \"Get the combined status for a specific ref\" endpoint would\n * otherwise match: https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref\n */\nfunction normalizePaginatedListResponse(response) {\n    // endpoints can respond with 204 if repository is empty\n    if (!response.data) {\n        return {\n            ...response,\n            data: [],\n        };\n    }\n    const responseNeedsNormalization = \"total_count\" in response.data && !(\"url\" in response.data);\n    if (!responseNeedsNormalization)\n        return response;\n    // keep the additional properties intact as there is currently no other way\n    // to retrieve the same information.\n    const incompleteResults = response.data.incomplete_results;\n    const repositorySelection = response.data.repository_selection;\n    const totalCount = response.data.total_count;\n    delete response.data.incomplete_results;\n    delete response.data.repository_selection;\n    delete response.data.total_count;\n    const namespaceKey = Object.keys(response.data)[0];\n    const data = response.data[namespaceKey];\n    response.data = data;\n    if (typeof incompleteResults !== \"undefined\") {\n        response.data.incomplete_results = incompleteResults;\n    }\n    if (typeof repositorySelection !== \"undefined\") {\n        response.data.repository_selection = repositorySelection;\n    }\n    response.data.total_count = totalCount;\n    return response;\n}\n\nfunction iterator(octokit, route, parameters) {\n    const options = typeof route === \"function\"\n        ? route.endpoint(parameters)\n        : octokit.request.endpoint(route, parameters);\n    const requestMethod = typeof route === \"function\" ? route : octokit.request;\n    const method = options.method;\n    const headers = options.headers;\n    let url = options.url;\n    return {\n        [Symbol.asyncIterator]: () => ({\n            async next() {\n                if (!url)\n                    return { done: true };\n                try {\n                    const response = await requestMethod({ method, url, headers });\n                    const normalizedResponse = normalizePaginatedListResponse(response);\n                    // `response.headers.link` format:\n                    // '<https://api.github.com/users/aseemk/followers?page=2>; rel=\"next\", <https://api.github.com/users/aseemk/followers?page=2>; rel=\"last\"'\n                    // sets `url` to undefined if \"next\" URL is not present or `link` header is not set\n                    url = ((normalizedResponse.headers.link || \"\").match(/<([^>]+)>;\\s*rel=\"next\"/) || [])[1];\n                    return { value: normalizedResponse };\n                }\n                catch (error) {\n                    if (error.status !== 409)\n                        throw error;\n                    url = \"\";\n                    return {\n                        value: {\n                            status: 200,\n                            headers: {},\n                            data: [],\n                        },\n                    };\n                }\n            },\n        }),\n    };\n}\n\nfunction paginate(octokit, route, parameters, mapFn) {\n    if (typeof parameters === \"function\") {\n        mapFn = parameters;\n        parameters = undefined;\n    }\n    return gather(octokit, [], iterator(octokit, route, parameters)[Symbol.asyncIterator](), mapFn);\n}\nfunction gather(octokit, results, iterator, mapFn) {\n    return iterator.next().then((result) => {\n        if (result.done) {\n            return results;\n        }\n        let earlyExit = false;\n        function done() {\n            earlyExit = true;\n        }\n        results = results.concat(mapFn ? mapFn(result.value, done) : result.value.data);\n        if (earlyExit) {\n            return results;\n        }\n        return gather(octokit, results, iterator, mapFn);\n    });\n}\n\nconst composePaginateRest = Object.assign(paginate, {\n    iterator,\n});\n\nconst paginatingEndpoints = [\n    \"GET /app/hook/deliveries\",\n    \"GET /app/installations\",\n    \"GET /applications/grants\",\n    \"GET /authorizations\",\n    \"GET /enterprises/{enterprise}/actions/permissions/organizations\",\n    \"GET /enterprises/{enterprise}/actions/runner-groups\",\n    \"GET /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations\",\n    \"GET /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners\",\n    \"GET /enterprises/{enterprise}/actions/runners\",\n    \"GET /enterprises/{enterprise}/actions/runners/downloads\",\n    \"GET /events\",\n    \"GET /gists\",\n    \"GET /gists/public\",\n    \"GET /gists/starred\",\n    \"GET /gists/{gist_id}/comments\",\n    \"GET /gists/{gist_id}/commits\",\n    \"GET /gists/{gist_id}/forks\",\n    \"GET /installation/repositories\",\n    \"GET /issues\",\n    \"GET /marketplace_listing/plans\",\n    \"GET /marketplace_listing/plans/{plan_id}/accounts\",\n    \"GET /marketplace_listing/stubbed/plans\",\n    \"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\",\n    \"GET /networks/{owner}/{repo}/events\",\n    \"GET /notifications\",\n    \"GET /organizations\",\n    \"GET /orgs/{org}/actions/permissions/repositories\",\n    \"GET /orgs/{org}/actions/runner-groups\",\n    \"GET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories\",\n    \"GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runners\",\n    \"GET /orgs/{org}/actions/runners\",\n    \"GET /orgs/{org}/actions/runners/downloads\",\n    \"GET /orgs/{org}/actions/secrets\",\n    \"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\",\n    \"GET /orgs/{org}/blocks\",\n    \"GET /orgs/{org}/credential-authorizations\",\n    \"GET /orgs/{org}/events\",\n    \"GET /orgs/{org}/failed_invitations\",\n    \"GET /orgs/{org}/hooks\",\n    \"GET /orgs/{org}/hooks/{hook_id}/deliveries\",\n    \"GET /orgs/{org}/installations\",\n    \"GET /orgs/{org}/invitations\",\n    \"GET /orgs/{org}/invitations/{invitation_id}/teams\",\n    \"GET /orgs/{org}/issues\",\n    \"GET /orgs/{org}/members\",\n    \"GET /orgs/{org}/migrations\",\n    \"GET /orgs/{org}/migrations/{migration_id}/repositories\",\n    \"GET /orgs/{org}/outside_collaborators\",\n    \"GET /orgs/{org}/packages\",\n    \"GET /orgs/{org}/projects\",\n    \"GET /orgs/{org}/public_members\",\n    \"GET /orgs/{org}/repos\",\n    \"GET /orgs/{org}/secret-scanning/alerts\",\n    \"GET /orgs/{org}/team-sync/groups\",\n    \"GET /orgs/{org}/teams\",\n    \"GET /orgs/{org}/teams/{team_slug}/discussions\",\n    \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\",\n    \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n    \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\",\n    \"GET /orgs/{org}/teams/{team_slug}/invitations\",\n    \"GET /orgs/{org}/teams/{team_slug}/members\",\n    \"GET /orgs/{org}/teams/{team_slug}/projects\",\n    \"GET /orgs/{org}/teams/{team_slug}/repos\",\n    \"GET /orgs/{org}/teams/{team_slug}/team-sync/group-mappings\",\n    \"GET /orgs/{org}/teams/{team_slug}/teams\",\n    \"GET /projects/columns/{column_id}/cards\",\n    \"GET /projects/{project_id}/collaborators\",\n    \"GET /projects/{project_id}/columns\",\n    \"GET /repos/{owner}/{repo}/actions/artifacts\",\n    \"GET /repos/{owner}/{repo}/actions/runners\",\n    \"GET /repos/{owner}/{repo}/actions/runners/downloads\",\n    \"GET /repos/{owner}/{repo}/actions/runs\",\n    \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\",\n    \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs\",\n    \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\",\n    \"GET /repos/{owner}/{repo}/actions/secrets\",\n    \"GET /repos/{owner}/{repo}/actions/workflows\",\n    \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\",\n    \"GET /repos/{owner}/{repo}/assignees\",\n    \"GET /repos/{owner}/{repo}/autolinks\",\n    \"GET /repos/{owner}/{repo}/branches\",\n    \"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\",\n    \"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\",\n    \"GET /repos/{owner}/{repo}/code-scanning/alerts\",\n    \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\",\n    \"GET /repos/{owner}/{repo}/code-scanning/analyses\",\n    \"GET /repos/{owner}/{repo}/collaborators\",\n    \"GET /repos/{owner}/{repo}/comments\",\n    \"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\",\n    \"GET /repos/{owner}/{repo}/commits\",\n    \"GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head\",\n    \"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\",\n    \"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\",\n    \"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\",\n    \"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\",\n    \"GET /repos/{owner}/{repo}/commits/{ref}/statuses\",\n    \"GET /repos/{owner}/{repo}/contributors\",\n    \"GET /repos/{owner}/{repo}/deployments\",\n    \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\",\n    \"GET /repos/{owner}/{repo}/events\",\n    \"GET /repos/{owner}/{repo}/forks\",\n    \"GET /repos/{owner}/{repo}/git/matching-refs/{ref}\",\n    \"GET /repos/{owner}/{repo}/hooks\",\n    \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries\",\n    \"GET /repos/{owner}/{repo}/invitations\",\n    \"GET /repos/{owner}/{repo}/issues\",\n    \"GET /repos/{owner}/{repo}/issues/comments\",\n    \"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\",\n    \"GET /repos/{owner}/{repo}/issues/events\",\n    \"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\",\n    \"GET /repos/{owner}/{repo}/issues/{issue_number}/events\",\n    \"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\",\n    \"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\",\n    \"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\",\n    \"GET /repos/{owner}/{repo}/keys\",\n    \"GET /repos/{owner}/{repo}/labels\",\n    \"GET /repos/{owner}/{repo}/milestones\",\n    \"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\",\n    \"GET /repos/{owner}/{repo}/notifications\",\n    \"GET /repos/{owner}/{repo}/pages/builds\",\n    \"GET /repos/{owner}/{repo}/projects\",\n    \"GET /repos/{owner}/{repo}/pulls\",\n    \"GET /repos/{owner}/{repo}/pulls/comments\",\n    \"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\",\n    \"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\",\n    \"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\",\n    \"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\",\n    \"GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\",\n    \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\",\n    \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\",\n    \"GET /repos/{owner}/{repo}/releases\",\n    \"GET /repos/{owner}/{repo}/releases/{release_id}/assets\",\n    \"GET /repos/{owner}/{repo}/secret-scanning/alerts\",\n    \"GET /repos/{owner}/{repo}/stargazers\",\n    \"GET /repos/{owner}/{repo}/subscribers\",\n    \"GET /repos/{owner}/{repo}/tags\",\n    \"GET /repos/{owner}/{repo}/teams\",\n    \"GET /repositories\",\n    \"GET /repositories/{repository_id}/environments/{environment_name}/secrets\",\n    \"GET /scim/v2/enterprises/{enterprise}/Groups\",\n    \"GET /scim/v2/enterprises/{enterprise}/Users\",\n    \"GET /scim/v2/organizations/{org}/Users\",\n    \"GET /search/code\",\n    \"GET /search/commits\",\n    \"GET /search/issues\",\n    \"GET /search/labels\",\n    \"GET /search/repositories\",\n    \"GET /search/topics\",\n    \"GET /search/users\",\n    \"GET /teams/{team_id}/discussions\",\n    \"GET /teams/{team_id}/discussions/{discussion_number}/comments\",\n    \"GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n    \"GET /teams/{team_id}/discussions/{discussion_number}/reactions\",\n    \"GET /teams/{team_id}/invitations\",\n    \"GET /teams/{team_id}/members\",\n    \"GET /teams/{team_id}/projects\",\n    \"GET /teams/{team_id}/repos\",\n    \"GET /teams/{team_id}/team-sync/group-mappings\",\n    \"GET /teams/{team_id}/teams\",\n    \"GET /user/blocks\",\n    \"GET /user/emails\",\n    \"GET /user/followers\",\n    \"GET /user/following\",\n    \"GET /user/gpg_keys\",\n    \"GET /user/installations\",\n    \"GET /user/installations/{installation_id}/repositories\",\n    \"GET /user/issues\",\n    \"GET /user/keys\",\n    \"GET /user/marketplace_purchases\",\n    \"GET /user/marketplace_purchases/stubbed\",\n    \"GET /user/memberships/orgs\",\n    \"GET /user/migrations\",\n    \"GET /user/migrations/{migration_id}/repositories\",\n    \"GET /user/orgs\",\n    \"GET /user/packages\",\n    \"GET /user/public_emails\",\n    \"GET /user/repos\",\n    \"GET /user/repository_invitations\",\n    \"GET /user/starred\",\n    \"GET /user/subscriptions\",\n    \"GET /user/teams\",\n    \"GET /users\",\n    \"GET /users/{username}/events\",\n    \"GET /users/{username}/events/orgs/{org}\",\n    \"GET /users/{username}/events/public\",\n    \"GET /users/{username}/followers\",\n    \"GET /users/{username}/following\",\n    \"GET /users/{username}/gists\",\n    \"GET /users/{username}/gpg_keys\",\n    \"GET /users/{username}/keys\",\n    \"GET /users/{username}/orgs\",\n    \"GET /users/{username}/packages\",\n    \"GET /users/{username}/projects\",\n    \"GET /users/{username}/received_events\",\n    \"GET /users/{username}/received_events/public\",\n    \"GET /users/{username}/repos\",\n    \"GET /users/{username}/starred\",\n    \"GET /users/{username}/subscriptions\",\n];\n\nfunction isPaginatingEndpoint(arg) {\n    if (typeof arg === \"string\") {\n        return paginatingEndpoints.includes(arg);\n    }\n    else {\n        return false;\n    }\n}\n\n/**\n * @param octokit Octokit instance\n * @param options Options passed to Octokit constructor\n */\nfunction paginateRest(octokit) {\n    return {\n        paginate: Object.assign(paginate.bind(null, octokit), {\n            iterator: iterator.bind(null, octokit),\n        }),\n    };\n}\npaginateRest.VERSION = VERSION;\n\nexport { composePaginateRest, isPaginatingEndpoint, paginateRest, paginatingEndpoints };\n//# sourceMappingURL=index.js.map\n","const Endpoints = {\n    actions: {\n        addSelectedRepoToOrgSecret: [\n            \"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\",\n        ],\n        approveWorkflowRun: [\n            \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve\",\n        ],\n        cancelWorkflowRun: [\n            \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel\",\n        ],\n        createOrUpdateEnvironmentSecret: [\n            \"PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\",\n        ],\n        createOrUpdateOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}\"],\n        createOrUpdateRepoSecret: [\n            \"PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}\",\n        ],\n        createRegistrationTokenForOrg: [\n            \"POST /orgs/{org}/actions/runners/registration-token\",\n        ],\n        createRegistrationTokenForRepo: [\n            \"POST /repos/{owner}/{repo}/actions/runners/registration-token\",\n        ],\n        createRemoveTokenForOrg: [\"POST /orgs/{org}/actions/runners/remove-token\"],\n        createRemoveTokenForRepo: [\n            \"POST /repos/{owner}/{repo}/actions/runners/remove-token\",\n        ],\n        createWorkflowDispatch: [\n            \"POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches\",\n        ],\n        deleteArtifact: [\n            \"DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\",\n        ],\n        deleteEnvironmentSecret: [\n            \"DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\",\n        ],\n        deleteOrgSecret: [\"DELETE /orgs/{org}/actions/secrets/{secret_name}\"],\n        deleteRepoSecret: [\n            \"DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}\",\n        ],\n        deleteSelfHostedRunnerFromOrg: [\n            \"DELETE /orgs/{org}/actions/runners/{runner_id}\",\n        ],\n        deleteSelfHostedRunnerFromRepo: [\n            \"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}\",\n        ],\n        deleteWorkflowRun: [\"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n        deleteWorkflowRunLogs: [\n            \"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs\",\n        ],\n        disableSelectedRepositoryGithubActionsOrganization: [\n            \"DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}\",\n        ],\n        disableWorkflow: [\n            \"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable\",\n        ],\n        downloadArtifact: [\n            \"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}\",\n        ],\n        downloadJobLogsForWorkflowRun: [\n            \"GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs\",\n        ],\n        downloadWorkflowRunAttemptLogs: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs\",\n        ],\n        downloadWorkflowRunLogs: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs\",\n        ],\n        enableSelectedRepositoryGithubActionsOrganization: [\n            \"PUT /orgs/{org}/actions/permissions/repositories/{repository_id}\",\n        ],\n        enableWorkflow: [\n            \"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable\",\n        ],\n        getAllowedActionsOrganization: [\n            \"GET /orgs/{org}/actions/permissions/selected-actions\",\n        ],\n        getAllowedActionsRepository: [\n            \"GET /repos/{owner}/{repo}/actions/permissions/selected-actions\",\n        ],\n        getArtifact: [\"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"],\n        getEnvironmentPublicKey: [\n            \"GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key\",\n        ],\n        getEnvironmentSecret: [\n            \"GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\",\n        ],\n        getGithubActionsPermissionsOrganization: [\n            \"GET /orgs/{org}/actions/permissions\",\n        ],\n        getGithubActionsPermissionsRepository: [\n            \"GET /repos/{owner}/{repo}/actions/permissions\",\n        ],\n        getJobForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/jobs/{job_id}\"],\n        getOrgPublicKey: [\"GET /orgs/{org}/actions/secrets/public-key\"],\n        getOrgSecret: [\"GET /orgs/{org}/actions/secrets/{secret_name}\"],\n        getPendingDeploymentsForRun: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\",\n        ],\n        getRepoPermissions: [\n            \"GET /repos/{owner}/{repo}/actions/permissions\",\n            {},\n            { renamed: [\"actions\", \"getGithubActionsPermissionsRepository\"] },\n        ],\n        getRepoPublicKey: [\"GET /repos/{owner}/{repo}/actions/secrets/public-key\"],\n        getRepoSecret: [\"GET /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n        getReviewsForRun: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals\",\n        ],\n        getSelfHostedRunnerForOrg: [\"GET /orgs/{org}/actions/runners/{runner_id}\"],\n        getSelfHostedRunnerForRepo: [\n            \"GET /repos/{owner}/{repo}/actions/runners/{runner_id}\",\n        ],\n        getWorkflow: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}\"],\n        getWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n        getWorkflowRunAttempt: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}\",\n        ],\n        getWorkflowRunUsage: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing\",\n        ],\n        getWorkflowUsage: [\n            \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing\",\n        ],\n        listArtifactsForRepo: [\"GET /repos/{owner}/{repo}/actions/artifacts\"],\n        listEnvironmentSecrets: [\n            \"GET /repositories/{repository_id}/environments/{environment_name}/secrets\",\n        ],\n        listJobsForWorkflowRun: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\",\n        ],\n        listJobsForWorkflowRunAttempt: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs\",\n        ],\n        listOrgSecrets: [\"GET /orgs/{org}/actions/secrets\"],\n        listRepoSecrets: [\"GET /repos/{owner}/{repo}/actions/secrets\"],\n        listRepoWorkflows: [\"GET /repos/{owner}/{repo}/actions/workflows\"],\n        listRunnerApplicationsForOrg: [\"GET /orgs/{org}/actions/runners/downloads\"],\n        listRunnerApplicationsForRepo: [\n            \"GET /repos/{owner}/{repo}/actions/runners/downloads\",\n        ],\n        listSelectedReposForOrgSecret: [\n            \"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\",\n        ],\n        listSelectedRepositoriesEnabledGithubActionsOrganization: [\n            \"GET /orgs/{org}/actions/permissions/repositories\",\n        ],\n        listSelfHostedRunnersForOrg: [\"GET /orgs/{org}/actions/runners\"],\n        listSelfHostedRunnersForRepo: [\"GET /repos/{owner}/{repo}/actions/runners\"],\n        listWorkflowRunArtifacts: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\",\n        ],\n        listWorkflowRuns: [\n            \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\",\n        ],\n        listWorkflowRunsForRepo: [\"GET /repos/{owner}/{repo}/actions/runs\"],\n        removeSelectedRepoFromOrgSecret: [\n            \"DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\",\n        ],\n        reviewPendingDeploymentsForRun: [\n            \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\",\n        ],\n        setAllowedActionsOrganization: [\n            \"PUT /orgs/{org}/actions/permissions/selected-actions\",\n        ],\n        setAllowedActionsRepository: [\n            \"PUT /repos/{owner}/{repo}/actions/permissions/selected-actions\",\n        ],\n        setGithubActionsPermissionsOrganization: [\n            \"PUT /orgs/{org}/actions/permissions\",\n        ],\n        setGithubActionsPermissionsRepository: [\n            \"PUT /repos/{owner}/{repo}/actions/permissions\",\n        ],\n        setSelectedReposForOrgSecret: [\n            \"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories\",\n        ],\n        setSelectedRepositoriesEnabledGithubActionsOrganization: [\n            \"PUT /orgs/{org}/actions/permissions/repositories\",\n        ],\n    },\n    activity: {\n        checkRepoIsStarredByAuthenticatedUser: [\"GET /user/starred/{owner}/{repo}\"],\n        deleteRepoSubscription: [\"DELETE /repos/{owner}/{repo}/subscription\"],\n        deleteThreadSubscription: [\n            \"DELETE /notifications/threads/{thread_id}/subscription\",\n        ],\n        getFeeds: [\"GET /feeds\"],\n        getRepoSubscription: [\"GET /repos/{owner}/{repo}/subscription\"],\n        getThread: [\"GET /notifications/threads/{thread_id}\"],\n        getThreadSubscriptionForAuthenticatedUser: [\n            \"GET /notifications/threads/{thread_id}/subscription\",\n        ],\n        listEventsForAuthenticatedUser: [\"GET /users/{username}/events\"],\n        listNotificationsForAuthenticatedUser: [\"GET /notifications\"],\n        listOrgEventsForAuthenticatedUser: [\n            \"GET /users/{username}/events/orgs/{org}\",\n        ],\n        listPublicEvents: [\"GET /events\"],\n        listPublicEventsForRepoNetwork: [\"GET /networks/{owner}/{repo}/events\"],\n        listPublicEventsForUser: [\"GET /users/{username}/events/public\"],\n        listPublicOrgEvents: [\"GET /orgs/{org}/events\"],\n        listReceivedEventsForUser: [\"GET /users/{username}/received_events\"],\n        listReceivedPublicEventsForUser: [\n            \"GET /users/{username}/received_events/public\",\n        ],\n        listRepoEvents: [\"GET /repos/{owner}/{repo}/events\"],\n        listRepoNotificationsForAuthenticatedUser: [\n            \"GET /repos/{owner}/{repo}/notifications\",\n        ],\n        listReposStarredByAuthenticatedUser: [\"GET /user/starred\"],\n        listReposStarredByUser: [\"GET /users/{username}/starred\"],\n        listReposWatchedByUser: [\"GET /users/{username}/subscriptions\"],\n        listStargazersForRepo: [\"GET /repos/{owner}/{repo}/stargazers\"],\n        listWatchedReposForAuthenticatedUser: [\"GET /user/subscriptions\"],\n        listWatchersForRepo: [\"GET /repos/{owner}/{repo}/subscribers\"],\n        markNotificationsAsRead: [\"PUT /notifications\"],\n        markRepoNotificationsAsRead: [\"PUT /repos/{owner}/{repo}/notifications\"],\n        markThreadAsRead: [\"PATCH /notifications/threads/{thread_id}\"],\n        setRepoSubscription: [\"PUT /repos/{owner}/{repo}/subscription\"],\n        setThreadSubscription: [\n            \"PUT /notifications/threads/{thread_id}/subscription\",\n        ],\n        starRepoForAuthenticatedUser: [\"PUT /user/starred/{owner}/{repo}\"],\n        unstarRepoForAuthenticatedUser: [\"DELETE /user/starred/{owner}/{repo}\"],\n    },\n    apps: {\n        addRepoToInstallation: [\n            \"PUT /user/installations/{installation_id}/repositories/{repository_id}\",\n            {},\n            { renamed: [\"apps\", \"addRepoToInstallationForAuthenticatedUser\"] },\n        ],\n        addRepoToInstallationForAuthenticatedUser: [\n            \"PUT /user/installations/{installation_id}/repositories/{repository_id}\",\n        ],\n        checkToken: [\"POST /applications/{client_id}/token\"],\n        createContentAttachment: [\n            \"POST /content_references/{content_reference_id}/attachments\",\n            { mediaType: { previews: [\"corsair\"] } },\n        ],\n        createContentAttachmentForRepo: [\n            \"POST /repos/{owner}/{repo}/content_references/{content_reference_id}/attachments\",\n            { mediaType: { previews: [\"corsair\"] } },\n        ],\n        createFromManifest: [\"POST /app-manifests/{code}/conversions\"],\n        createInstallationAccessToken: [\n            \"POST /app/installations/{installation_id}/access_tokens\",\n        ],\n        deleteAuthorization: [\"DELETE /applications/{client_id}/grant\"],\n        deleteInstallation: [\"DELETE /app/installations/{installation_id}\"],\n        deleteToken: [\"DELETE /applications/{client_id}/token\"],\n        getAuthenticated: [\"GET /app\"],\n        getBySlug: [\"GET /apps/{app_slug}\"],\n        getInstallation: [\"GET /app/installations/{installation_id}\"],\n        getOrgInstallation: [\"GET /orgs/{org}/installation\"],\n        getRepoInstallation: [\"GET /repos/{owner}/{repo}/installation\"],\n        getSubscriptionPlanForAccount: [\n            \"GET /marketplace_listing/accounts/{account_id}\",\n        ],\n        getSubscriptionPlanForAccountStubbed: [\n            \"GET /marketplace_listing/stubbed/accounts/{account_id}\",\n        ],\n        getUserInstallation: [\"GET /users/{username}/installation\"],\n        getWebhookConfigForApp: [\"GET /app/hook/config\"],\n        getWebhookDelivery: [\"GET /app/hook/deliveries/{delivery_id}\"],\n        listAccountsForPlan: [\"GET /marketplace_listing/plans/{plan_id}/accounts\"],\n        listAccountsForPlanStubbed: [\n            \"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\",\n        ],\n        listInstallationReposForAuthenticatedUser: [\n            \"GET /user/installations/{installation_id}/repositories\",\n        ],\n        listInstallations: [\"GET /app/installations\"],\n        listInstallationsForAuthenticatedUser: [\"GET /user/installations\"],\n        listPlans: [\"GET /marketplace_listing/plans\"],\n        listPlansStubbed: [\"GET /marketplace_listing/stubbed/plans\"],\n        listReposAccessibleToInstallation: [\"GET /installation/repositories\"],\n        listSubscriptionsForAuthenticatedUser: [\"GET /user/marketplace_purchases\"],\n        listSubscriptionsForAuthenticatedUserStubbed: [\n            \"GET /user/marketplace_purchases/stubbed\",\n        ],\n        listWebhookDeliveries: [\"GET /app/hook/deliveries\"],\n        redeliverWebhookDelivery: [\n            \"POST /app/hook/deliveries/{delivery_id}/attempts\",\n        ],\n        removeRepoFromInstallation: [\n            \"DELETE /user/installations/{installation_id}/repositories/{repository_id}\",\n            {},\n            { renamed: [\"apps\", \"removeRepoFromInstallationForAuthenticatedUser\"] },\n        ],\n        removeRepoFromInstallationForAuthenticatedUser: [\n            \"DELETE /user/installations/{installation_id}/repositories/{repository_id}\",\n        ],\n        resetToken: [\"PATCH /applications/{client_id}/token\"],\n        revokeInstallationAccessToken: [\"DELETE /installation/token\"],\n        scopeToken: [\"POST /applications/{client_id}/token/scoped\"],\n        suspendInstallation: [\"PUT /app/installations/{installation_id}/suspended\"],\n        unsuspendInstallation: [\n            \"DELETE /app/installations/{installation_id}/suspended\",\n        ],\n        updateWebhookConfigForApp: [\"PATCH /app/hook/config\"],\n    },\n    billing: {\n        getGithubActionsBillingOrg: [\"GET /orgs/{org}/settings/billing/actions\"],\n        getGithubActionsBillingUser: [\n            \"GET /users/{username}/settings/billing/actions\",\n        ],\n        getGithubPackagesBillingOrg: [\"GET /orgs/{org}/settings/billing/packages\"],\n        getGithubPackagesBillingUser: [\n            \"GET /users/{username}/settings/billing/packages\",\n        ],\n        getSharedStorageBillingOrg: [\n            \"GET /orgs/{org}/settings/billing/shared-storage\",\n        ],\n        getSharedStorageBillingUser: [\n            \"GET /users/{username}/settings/billing/shared-storage\",\n        ],\n    },\n    checks: {\n        create: [\"POST /repos/{owner}/{repo}/check-runs\"],\n        createSuite: [\"POST /repos/{owner}/{repo}/check-suites\"],\n        get: [\"GET /repos/{owner}/{repo}/check-runs/{check_run_id}\"],\n        getSuite: [\"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}\"],\n        listAnnotations: [\n            \"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\",\n        ],\n        listForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\"],\n        listForSuite: [\n            \"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\",\n        ],\n        listSuitesForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\"],\n        rerequestRun: [\n            \"POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest\",\n        ],\n        rerequestSuite: [\n            \"POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest\",\n        ],\n        setSuitesPreferences: [\n            \"PATCH /repos/{owner}/{repo}/check-suites/preferences\",\n        ],\n        update: [\"PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}\"],\n    },\n    codeScanning: {\n        deleteAnalysis: [\n            \"DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}\",\n        ],\n        getAlert: [\n            \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\",\n            {},\n            { renamedParameters: { alert_id: \"alert_number\" } },\n        ],\n        getAnalysis: [\n            \"GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}\",\n        ],\n        getSarif: [\"GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}\"],\n        listAlertInstances: [\n            \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\",\n        ],\n        listAlertsForRepo: [\"GET /repos/{owner}/{repo}/code-scanning/alerts\"],\n        listAlertsInstances: [\n            \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\",\n            {},\n            { renamed: [\"codeScanning\", \"listAlertInstances\"] },\n        ],\n        listRecentAnalyses: [\"GET /repos/{owner}/{repo}/code-scanning/analyses\"],\n        updateAlert: [\n            \"PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\",\n        ],\n        uploadSarif: [\"POST /repos/{owner}/{repo}/code-scanning/sarifs\"],\n    },\n    codesOfConduct: {\n        getAllCodesOfConduct: [\"GET /codes_of_conduct\"],\n        getConductCode: [\"GET /codes_of_conduct/{key}\"],\n    },\n    emojis: { get: [\"GET /emojis\"] },\n    enterpriseAdmin: {\n        disableSelectedOrganizationGithubActionsEnterprise: [\n            \"DELETE /enterprises/{enterprise}/actions/permissions/organizations/{org_id}\",\n        ],\n        enableSelectedOrganizationGithubActionsEnterprise: [\n            \"PUT /enterprises/{enterprise}/actions/permissions/organizations/{org_id}\",\n        ],\n        getAllowedActionsEnterprise: [\n            \"GET /enterprises/{enterprise}/actions/permissions/selected-actions\",\n        ],\n        getGithubActionsPermissionsEnterprise: [\n            \"GET /enterprises/{enterprise}/actions/permissions\",\n        ],\n        listSelectedOrganizationsEnabledGithubActionsEnterprise: [\n            \"GET /enterprises/{enterprise}/actions/permissions/organizations\",\n        ],\n        setAllowedActionsEnterprise: [\n            \"PUT /enterprises/{enterprise}/actions/permissions/selected-actions\",\n        ],\n        setGithubActionsPermissionsEnterprise: [\n            \"PUT /enterprises/{enterprise}/actions/permissions\",\n        ],\n        setSelectedOrganizationsEnabledGithubActionsEnterprise: [\n            \"PUT /enterprises/{enterprise}/actions/permissions/organizations\",\n        ],\n    },\n    gists: {\n        checkIsStarred: [\"GET /gists/{gist_id}/star\"],\n        create: [\"POST /gists\"],\n        createComment: [\"POST /gists/{gist_id}/comments\"],\n        delete: [\"DELETE /gists/{gist_id}\"],\n        deleteComment: [\"DELETE /gists/{gist_id}/comments/{comment_id}\"],\n        fork: [\"POST /gists/{gist_id}/forks\"],\n        get: [\"GET /gists/{gist_id}\"],\n        getComment: [\"GET /gists/{gist_id}/comments/{comment_id}\"],\n        getRevision: [\"GET /gists/{gist_id}/{sha}\"],\n        list: [\"GET /gists\"],\n        listComments: [\"GET /gists/{gist_id}/comments\"],\n        listCommits: [\"GET /gists/{gist_id}/commits\"],\n        listForUser: [\"GET /users/{username}/gists\"],\n        listForks: [\"GET /gists/{gist_id}/forks\"],\n        listPublic: [\"GET /gists/public\"],\n        listStarred: [\"GET /gists/starred\"],\n        star: [\"PUT /gists/{gist_id}/star\"],\n        unstar: [\"DELETE /gists/{gist_id}/star\"],\n        update: [\"PATCH /gists/{gist_id}\"],\n        updateComment: [\"PATCH /gists/{gist_id}/comments/{comment_id}\"],\n    },\n    git: {\n        createBlob: [\"POST /repos/{owner}/{repo}/git/blobs\"],\n        createCommit: [\"POST /repos/{owner}/{repo}/git/commits\"],\n        createRef: [\"POST /repos/{owner}/{repo}/git/refs\"],\n        createTag: [\"POST /repos/{owner}/{repo}/git/tags\"],\n        createTree: [\"POST /repos/{owner}/{repo}/git/trees\"],\n        deleteRef: [\"DELETE /repos/{owner}/{repo}/git/refs/{ref}\"],\n        getBlob: [\"GET /repos/{owner}/{repo}/git/blobs/{file_sha}\"],\n        getCommit: [\"GET /repos/{owner}/{repo}/git/commits/{commit_sha}\"],\n        getRef: [\"GET /repos/{owner}/{repo}/git/ref/{ref}\"],\n        getTag: [\"GET /repos/{owner}/{repo}/git/tags/{tag_sha}\"],\n        getTree: [\"GET /repos/{owner}/{repo}/git/trees/{tree_sha}\"],\n        listMatchingRefs: [\"GET /repos/{owner}/{repo}/git/matching-refs/{ref}\"],\n        updateRef: [\"PATCH /repos/{owner}/{repo}/git/refs/{ref}\"],\n    },\n    gitignore: {\n        getAllTemplates: [\"GET /gitignore/templates\"],\n        getTemplate: [\"GET /gitignore/templates/{name}\"],\n    },\n    interactions: {\n        getRestrictionsForAuthenticatedUser: [\"GET /user/interaction-limits\"],\n        getRestrictionsForOrg: [\"GET /orgs/{org}/interaction-limits\"],\n        getRestrictionsForRepo: [\"GET /repos/{owner}/{repo}/interaction-limits\"],\n        getRestrictionsForYourPublicRepos: [\n            \"GET /user/interaction-limits\",\n            {},\n            { renamed: [\"interactions\", \"getRestrictionsForAuthenticatedUser\"] },\n        ],\n        removeRestrictionsForAuthenticatedUser: [\"DELETE /user/interaction-limits\"],\n        removeRestrictionsForOrg: [\"DELETE /orgs/{org}/interaction-limits\"],\n        removeRestrictionsForRepo: [\n            \"DELETE /repos/{owner}/{repo}/interaction-limits\",\n        ],\n        removeRestrictionsForYourPublicRepos: [\n            \"DELETE /user/interaction-limits\",\n            {},\n            { renamed: [\"interactions\", \"removeRestrictionsForAuthenticatedUser\"] },\n        ],\n        setRestrictionsForAuthenticatedUser: [\"PUT /user/interaction-limits\"],\n        setRestrictionsForOrg: [\"PUT /orgs/{org}/interaction-limits\"],\n        setRestrictionsForRepo: [\"PUT /repos/{owner}/{repo}/interaction-limits\"],\n        setRestrictionsForYourPublicRepos: [\n            \"PUT /user/interaction-limits\",\n            {},\n            { renamed: [\"interactions\", \"setRestrictionsForAuthenticatedUser\"] },\n        ],\n    },\n    issues: {\n        addAssignees: [\n            \"POST /repos/{owner}/{repo}/issues/{issue_number}/assignees\",\n        ],\n        addLabels: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n        checkUserCanBeAssigned: [\"GET /repos/{owner}/{repo}/assignees/{assignee}\"],\n        create: [\"POST /repos/{owner}/{repo}/issues\"],\n        createComment: [\n            \"POST /repos/{owner}/{repo}/issues/{issue_number}/comments\",\n        ],\n        createLabel: [\"POST /repos/{owner}/{repo}/labels\"],\n        createMilestone: [\"POST /repos/{owner}/{repo}/milestones\"],\n        deleteComment: [\n            \"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}\",\n        ],\n        deleteLabel: [\"DELETE /repos/{owner}/{repo}/labels/{name}\"],\n        deleteMilestone: [\n            \"DELETE /repos/{owner}/{repo}/milestones/{milestone_number}\",\n        ],\n        get: [\"GET /repos/{owner}/{repo}/issues/{issue_number}\"],\n        getComment: [\"GET /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n        getEvent: [\"GET /repos/{owner}/{repo}/issues/events/{event_id}\"],\n        getLabel: [\"GET /repos/{owner}/{repo}/labels/{name}\"],\n        getMilestone: [\"GET /repos/{owner}/{repo}/milestones/{milestone_number}\"],\n        list: [\"GET /issues\"],\n        listAssignees: [\"GET /repos/{owner}/{repo}/assignees\"],\n        listComments: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\"],\n        listCommentsForRepo: [\"GET /repos/{owner}/{repo}/issues/comments\"],\n        listEvents: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/events\"],\n        listEventsForRepo: [\"GET /repos/{owner}/{repo}/issues/events\"],\n        listEventsForTimeline: [\n            \"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\",\n        ],\n        listForAuthenticatedUser: [\"GET /user/issues\"],\n        listForOrg: [\"GET /orgs/{org}/issues\"],\n        listForRepo: [\"GET /repos/{owner}/{repo}/issues\"],\n        listLabelsForMilestone: [\n            \"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\",\n        ],\n        listLabelsForRepo: [\"GET /repos/{owner}/{repo}/labels\"],\n        listLabelsOnIssue: [\n            \"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\",\n        ],\n        listMilestones: [\"GET /repos/{owner}/{repo}/milestones\"],\n        lock: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n        removeAllLabels: [\n            \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels\",\n        ],\n        removeAssignees: [\n            \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees\",\n        ],\n        removeLabel: [\n            \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}\",\n        ],\n        setLabels: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n        unlock: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n        update: [\"PATCH /repos/{owner}/{repo}/issues/{issue_number}\"],\n        updateComment: [\"PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n        updateLabel: [\"PATCH /repos/{owner}/{repo}/labels/{name}\"],\n        updateMilestone: [\n            \"PATCH /repos/{owner}/{repo}/milestones/{milestone_number}\",\n        ],\n    },\n    licenses: {\n        get: [\"GET /licenses/{license}\"],\n        getAllCommonlyUsed: [\"GET /licenses\"],\n        getForRepo: [\"GET /repos/{owner}/{repo}/license\"],\n    },\n    markdown: {\n        render: [\"POST /markdown\"],\n        renderRaw: [\n            \"POST /markdown/raw\",\n            { headers: { \"content-type\": \"text/plain; charset=utf-8\" } },\n        ],\n    },\n    meta: {\n        get: [\"GET /meta\"],\n        getOctocat: [\"GET /octocat\"],\n        getZen: [\"GET /zen\"],\n        root: [\"GET /\"],\n    },\n    migrations: {\n        cancelImport: [\"DELETE /repos/{owner}/{repo}/import\"],\n        deleteArchiveForAuthenticatedUser: [\n            \"DELETE /user/migrations/{migration_id}/archive\",\n        ],\n        deleteArchiveForOrg: [\n            \"DELETE /orgs/{org}/migrations/{migration_id}/archive\",\n        ],\n        downloadArchiveForOrg: [\n            \"GET /orgs/{org}/migrations/{migration_id}/archive\",\n        ],\n        getArchiveForAuthenticatedUser: [\n            \"GET /user/migrations/{migration_id}/archive\",\n        ],\n        getCommitAuthors: [\"GET /repos/{owner}/{repo}/import/authors\"],\n        getImportStatus: [\"GET /repos/{owner}/{repo}/import\"],\n        getLargeFiles: [\"GET /repos/{owner}/{repo}/import/large_files\"],\n        getStatusForAuthenticatedUser: [\"GET /user/migrations/{migration_id}\"],\n        getStatusForOrg: [\"GET /orgs/{org}/migrations/{migration_id}\"],\n        listForAuthenticatedUser: [\"GET /user/migrations\"],\n        listForOrg: [\"GET /orgs/{org}/migrations\"],\n        listReposForAuthenticatedUser: [\n            \"GET /user/migrations/{migration_id}/repositories\",\n        ],\n        listReposForOrg: [\"GET /orgs/{org}/migrations/{migration_id}/repositories\"],\n        listReposForUser: [\n            \"GET /user/migrations/{migration_id}/repositories\",\n            {},\n            { renamed: [\"migrations\", \"listReposForAuthenticatedUser\"] },\n        ],\n        mapCommitAuthor: [\"PATCH /repos/{owner}/{repo}/import/authors/{author_id}\"],\n        setLfsPreference: [\"PATCH /repos/{owner}/{repo}/import/lfs\"],\n        startForAuthenticatedUser: [\"POST /user/migrations\"],\n        startForOrg: [\"POST /orgs/{org}/migrations\"],\n        startImport: [\"PUT /repos/{owner}/{repo}/import\"],\n        unlockRepoForAuthenticatedUser: [\n            \"DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock\",\n        ],\n        unlockRepoForOrg: [\n            \"DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock\",\n        ],\n        updateImport: [\"PATCH /repos/{owner}/{repo}/import\"],\n    },\n    orgs: {\n        blockUser: [\"PUT /orgs/{org}/blocks/{username}\"],\n        cancelInvitation: [\"DELETE /orgs/{org}/invitations/{invitation_id}\"],\n        checkBlockedUser: [\"GET /orgs/{org}/blocks/{username}\"],\n        checkMembershipForUser: [\"GET /orgs/{org}/members/{username}\"],\n        checkPublicMembershipForUser: [\"GET /orgs/{org}/public_members/{username}\"],\n        convertMemberToOutsideCollaborator: [\n            \"PUT /orgs/{org}/outside_collaborators/{username}\",\n        ],\n        createInvitation: [\"POST /orgs/{org}/invitations\"],\n        createWebhook: [\"POST /orgs/{org}/hooks\"],\n        deleteWebhook: [\"DELETE /orgs/{org}/hooks/{hook_id}\"],\n        get: [\"GET /orgs/{org}\"],\n        getMembershipForAuthenticatedUser: [\"GET /user/memberships/orgs/{org}\"],\n        getMembershipForUser: [\"GET /orgs/{org}/memberships/{username}\"],\n        getWebhook: [\"GET /orgs/{org}/hooks/{hook_id}\"],\n        getWebhookConfigForOrg: [\"GET /orgs/{org}/hooks/{hook_id}/config\"],\n        getWebhookDelivery: [\n            \"GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}\",\n        ],\n        list: [\"GET /organizations\"],\n        listAppInstallations: [\"GET /orgs/{org}/installations\"],\n        listBlockedUsers: [\"GET /orgs/{org}/blocks\"],\n        listFailedInvitations: [\"GET /orgs/{org}/failed_invitations\"],\n        listForAuthenticatedUser: [\"GET /user/orgs\"],\n        listForUser: [\"GET /users/{username}/orgs\"],\n        listInvitationTeams: [\"GET /orgs/{org}/invitations/{invitation_id}/teams\"],\n        listMembers: [\"GET /orgs/{org}/members\"],\n        listMembershipsForAuthenticatedUser: [\"GET /user/memberships/orgs\"],\n        listOutsideCollaborators: [\"GET /orgs/{org}/outside_collaborators\"],\n        listPendingInvitations: [\"GET /orgs/{org}/invitations\"],\n        listPublicMembers: [\"GET /orgs/{org}/public_members\"],\n        listWebhookDeliveries: [\"GET /orgs/{org}/hooks/{hook_id}/deliveries\"],\n        listWebhooks: [\"GET /orgs/{org}/hooks\"],\n        pingWebhook: [\"POST /orgs/{org}/hooks/{hook_id}/pings\"],\n        redeliverWebhookDelivery: [\n            \"POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts\",\n        ],\n        removeMember: [\"DELETE /orgs/{org}/members/{username}\"],\n        removeMembershipForUser: [\"DELETE /orgs/{org}/memberships/{username}\"],\n        removeOutsideCollaborator: [\n            \"DELETE /orgs/{org}/outside_collaborators/{username}\",\n        ],\n        removePublicMembershipForAuthenticatedUser: [\n            \"DELETE /orgs/{org}/public_members/{username}\",\n        ],\n        setMembershipForUser: [\"PUT /orgs/{org}/memberships/{username}\"],\n        setPublicMembershipForAuthenticatedUser: [\n            \"PUT /orgs/{org}/public_members/{username}\",\n        ],\n        unblockUser: [\"DELETE /orgs/{org}/blocks/{username}\"],\n        update: [\"PATCH /orgs/{org}\"],\n        updateMembershipForAuthenticatedUser: [\n            \"PATCH /user/memberships/orgs/{org}\",\n        ],\n        updateWebhook: [\"PATCH /orgs/{org}/hooks/{hook_id}\"],\n        updateWebhookConfigForOrg: [\"PATCH /orgs/{org}/hooks/{hook_id}/config\"],\n    },\n    packages: {\n        deletePackageForAuthenticatedUser: [\n            \"DELETE /user/packages/{package_type}/{package_name}\",\n        ],\n        deletePackageForOrg: [\n            \"DELETE /orgs/{org}/packages/{package_type}/{package_name}\",\n        ],\n        deletePackageForUser: [\n            \"DELETE /users/{username}/packages/{package_type}/{package_name}\",\n        ],\n        deletePackageVersionForAuthenticatedUser: [\n            \"DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        deletePackageVersionForOrg: [\n            \"DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        deletePackageVersionForUser: [\n            \"DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        getAllPackageVersionsForAPackageOwnedByAnOrg: [\n            \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\",\n            {},\n            { renamed: [\"packages\", \"getAllPackageVersionsForPackageOwnedByOrg\"] },\n        ],\n        getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [\n            \"GET /user/packages/{package_type}/{package_name}/versions\",\n            {},\n            {\n                renamed: [\n                    \"packages\",\n                    \"getAllPackageVersionsForPackageOwnedByAuthenticatedUser\",\n                ],\n            },\n        ],\n        getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [\n            \"GET /user/packages/{package_type}/{package_name}/versions\",\n        ],\n        getAllPackageVersionsForPackageOwnedByOrg: [\n            \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\",\n        ],\n        getAllPackageVersionsForPackageOwnedByUser: [\n            \"GET /users/{username}/packages/{package_type}/{package_name}/versions\",\n        ],\n        getPackageForAuthenticatedUser: [\n            \"GET /user/packages/{package_type}/{package_name}\",\n        ],\n        getPackageForOrganization: [\n            \"GET /orgs/{org}/packages/{package_type}/{package_name}\",\n        ],\n        getPackageForUser: [\n            \"GET /users/{username}/packages/{package_type}/{package_name}\",\n        ],\n        getPackageVersionForAuthenticatedUser: [\n            \"GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        getPackageVersionForOrganization: [\n            \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        getPackageVersionForUser: [\n            \"GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        listPackagesForAuthenticatedUser: [\"GET /user/packages\"],\n        listPackagesForOrganization: [\"GET /orgs/{org}/packages\"],\n        listPackagesForUser: [\"GET /users/{username}/packages\"],\n        restorePackageForAuthenticatedUser: [\n            \"POST /user/packages/{package_type}/{package_name}/restore{?token}\",\n        ],\n        restorePackageForOrg: [\n            \"POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}\",\n        ],\n        restorePackageForUser: [\n            \"POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}\",\n        ],\n        restorePackageVersionForAuthenticatedUser: [\n            \"POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\",\n        ],\n        restorePackageVersionForOrg: [\n            \"POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\",\n        ],\n        restorePackageVersionForUser: [\n            \"POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\",\n        ],\n    },\n    projects: {\n        addCollaborator: [\"PUT /projects/{project_id}/collaborators/{username}\"],\n        createCard: [\"POST /projects/columns/{column_id}/cards\"],\n        createColumn: [\"POST /projects/{project_id}/columns\"],\n        createForAuthenticatedUser: [\"POST /user/projects\"],\n        createForOrg: [\"POST /orgs/{org}/projects\"],\n        createForRepo: [\"POST /repos/{owner}/{repo}/projects\"],\n        delete: [\"DELETE /projects/{project_id}\"],\n        deleteCard: [\"DELETE /projects/columns/cards/{card_id}\"],\n        deleteColumn: [\"DELETE /projects/columns/{column_id}\"],\n        get: [\"GET /projects/{project_id}\"],\n        getCard: [\"GET /projects/columns/cards/{card_id}\"],\n        getColumn: [\"GET /projects/columns/{column_id}\"],\n        getPermissionForUser: [\n            \"GET /projects/{project_id}/collaborators/{username}/permission\",\n        ],\n        listCards: [\"GET /projects/columns/{column_id}/cards\"],\n        listCollaborators: [\"GET /projects/{project_id}/collaborators\"],\n        listColumns: [\"GET /projects/{project_id}/columns\"],\n        listForOrg: [\"GET /orgs/{org}/projects\"],\n        listForRepo: [\"GET /repos/{owner}/{repo}/projects\"],\n        listForUser: [\"GET /users/{username}/projects\"],\n        moveCard: [\"POST /projects/columns/cards/{card_id}/moves\"],\n        moveColumn: [\"POST /projects/columns/{column_id}/moves\"],\n        removeCollaborator: [\n            \"DELETE /projects/{project_id}/collaborators/{username}\",\n        ],\n        update: [\"PATCH /projects/{project_id}\"],\n        updateCard: [\"PATCH /projects/columns/cards/{card_id}\"],\n        updateColumn: [\"PATCH /projects/columns/{column_id}\"],\n    },\n    pulls: {\n        checkIfMerged: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n        create: [\"POST /repos/{owner}/{repo}/pulls\"],\n        createReplyForReviewComment: [\n            \"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies\",\n        ],\n        createReview: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n        createReviewComment: [\n            \"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments\",\n        ],\n        deletePendingReview: [\n            \"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\",\n        ],\n        deleteReviewComment: [\n            \"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}\",\n        ],\n        dismissReview: [\n            \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals\",\n        ],\n        get: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}\"],\n        getReview: [\n            \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\",\n        ],\n        getReviewComment: [\"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}\"],\n        list: [\"GET /repos/{owner}/{repo}/pulls\"],\n        listCommentsForReview: [\n            \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\",\n        ],\n        listCommits: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\"],\n        listFiles: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\"],\n        listRequestedReviewers: [\n            \"GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\",\n        ],\n        listReviewComments: [\n            \"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\",\n        ],\n        listReviewCommentsForRepo: [\"GET /repos/{owner}/{repo}/pulls/comments\"],\n        listReviews: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n        merge: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n        removeRequestedReviewers: [\n            \"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\",\n        ],\n        requestReviewers: [\n            \"POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\",\n        ],\n        submitReview: [\n            \"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events\",\n        ],\n        update: [\"PATCH /repos/{owner}/{repo}/pulls/{pull_number}\"],\n        updateBranch: [\n            \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch\",\n        ],\n        updateReview: [\n            \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\",\n        ],\n        updateReviewComment: [\n            \"PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}\",\n        ],\n    },\n    rateLimit: { get: [\"GET /rate_limit\"] },\n    reactions: {\n        createForCommitComment: [\n            \"POST /repos/{owner}/{repo}/comments/{comment_id}/reactions\",\n        ],\n        createForIssue: [\n            \"POST /repos/{owner}/{repo}/issues/{issue_number}/reactions\",\n        ],\n        createForIssueComment: [\n            \"POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\",\n        ],\n        createForPullRequestReviewComment: [\n            \"POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\",\n        ],\n        createForRelease: [\n            \"POST /repos/{owner}/{repo}/releases/{release_id}/reactions\",\n        ],\n        createForTeamDiscussionCommentInOrg: [\n            \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n        ],\n        createForTeamDiscussionInOrg: [\n            \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\",\n        ],\n        deleteForCommitComment: [\n            \"DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}\",\n        ],\n        deleteForIssue: [\n            \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}\",\n        ],\n        deleteForIssueComment: [\n            \"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}\",\n        ],\n        deleteForPullRequestComment: [\n            \"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}\",\n        ],\n        deleteForTeamDiscussion: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}\",\n        ],\n        deleteForTeamDiscussionComment: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}\",\n        ],\n        listForCommitComment: [\n            \"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\",\n        ],\n        listForIssue: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\"],\n        listForIssueComment: [\n            \"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\",\n        ],\n        listForPullRequestReviewComment: [\n            \"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\",\n        ],\n        listForTeamDiscussionCommentInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n        ],\n        listForTeamDiscussionInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\",\n        ],\n    },\n    repos: {\n        acceptInvitation: [\n            \"PATCH /user/repository_invitations/{invitation_id}\",\n            {},\n            { renamed: [\"repos\", \"acceptInvitationForAuthenticatedUser\"] },\n        ],\n        acceptInvitationForAuthenticatedUser: [\n            \"PATCH /user/repository_invitations/{invitation_id}\",\n        ],\n        addAppAccessRestrictions: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n            {},\n            { mapToData: \"apps\" },\n        ],\n        addCollaborator: [\"PUT /repos/{owner}/{repo}/collaborators/{username}\"],\n        addStatusCheckContexts: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n            {},\n            { mapToData: \"contexts\" },\n        ],\n        addTeamAccessRestrictions: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n            {},\n            { mapToData: \"teams\" },\n        ],\n        addUserAccessRestrictions: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n            {},\n            { mapToData: \"users\" },\n        ],\n        checkCollaborator: [\"GET /repos/{owner}/{repo}/collaborators/{username}\"],\n        checkVulnerabilityAlerts: [\n            \"GET /repos/{owner}/{repo}/vulnerability-alerts\",\n        ],\n        compareCommits: [\"GET /repos/{owner}/{repo}/compare/{base}...{head}\"],\n        compareCommitsWithBasehead: [\n            \"GET /repos/{owner}/{repo}/compare/{basehead}\",\n        ],\n        createAutolink: [\"POST /repos/{owner}/{repo}/autolinks\"],\n        createCommitComment: [\n            \"POST /repos/{owner}/{repo}/commits/{commit_sha}/comments\",\n        ],\n        createCommitSignatureProtection: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\",\n        ],\n        createCommitStatus: [\"POST /repos/{owner}/{repo}/statuses/{sha}\"],\n        createDeployKey: [\"POST /repos/{owner}/{repo}/keys\"],\n        createDeployment: [\"POST /repos/{owner}/{repo}/deployments\"],\n        createDeploymentStatus: [\n            \"POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\",\n        ],\n        createDispatchEvent: [\"POST /repos/{owner}/{repo}/dispatches\"],\n        createForAuthenticatedUser: [\"POST /user/repos\"],\n        createFork: [\"POST /repos/{owner}/{repo}/forks\"],\n        createInOrg: [\"POST /orgs/{org}/repos\"],\n        createOrUpdateEnvironment: [\n            \"PUT /repos/{owner}/{repo}/environments/{environment_name}\",\n        ],\n        createOrUpdateFileContents: [\"PUT /repos/{owner}/{repo}/contents/{path}\"],\n        createPagesSite: [\"POST /repos/{owner}/{repo}/pages\"],\n        createRelease: [\"POST /repos/{owner}/{repo}/releases\"],\n        createUsingTemplate: [\n            \"POST /repos/{template_owner}/{template_repo}/generate\",\n        ],\n        createWebhook: [\"POST /repos/{owner}/{repo}/hooks\"],\n        declineInvitation: [\n            \"DELETE /user/repository_invitations/{invitation_id}\",\n            {},\n            { renamed: [\"repos\", \"declineInvitationForAuthenticatedUser\"] },\n        ],\n        declineInvitationForAuthenticatedUser: [\n            \"DELETE /user/repository_invitations/{invitation_id}\",\n        ],\n        delete: [\"DELETE /repos/{owner}/{repo}\"],\n        deleteAccessRestrictions: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\",\n        ],\n        deleteAdminBranchProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\",\n        ],\n        deleteAnEnvironment: [\n            \"DELETE /repos/{owner}/{repo}/environments/{environment_name}\",\n        ],\n        deleteAutolink: [\"DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}\"],\n        deleteBranchProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection\",\n        ],\n        deleteCommitComment: [\"DELETE /repos/{owner}/{repo}/comments/{comment_id}\"],\n        deleteCommitSignatureProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\",\n        ],\n        deleteDeployKey: [\"DELETE /repos/{owner}/{repo}/keys/{key_id}\"],\n        deleteDeployment: [\n            \"DELETE /repos/{owner}/{repo}/deployments/{deployment_id}\",\n        ],\n        deleteFile: [\"DELETE /repos/{owner}/{repo}/contents/{path}\"],\n        deleteInvitation: [\n            \"DELETE /repos/{owner}/{repo}/invitations/{invitation_id}\",\n        ],\n        deletePagesSite: [\"DELETE /repos/{owner}/{repo}/pages\"],\n        deletePullRequestReviewProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\",\n        ],\n        deleteRelease: [\"DELETE /repos/{owner}/{repo}/releases/{release_id}\"],\n        deleteReleaseAsset: [\n            \"DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}\",\n        ],\n        deleteWebhook: [\"DELETE /repos/{owner}/{repo}/hooks/{hook_id}\"],\n        disableAutomatedSecurityFixes: [\n            \"DELETE /repos/{owner}/{repo}/automated-security-fixes\",\n        ],\n        disableLfsForRepo: [\"DELETE /repos/{owner}/{repo}/lfs\"],\n        disableVulnerabilityAlerts: [\n            \"DELETE /repos/{owner}/{repo}/vulnerability-alerts\",\n        ],\n        downloadArchive: [\n            \"GET /repos/{owner}/{repo}/zipball/{ref}\",\n            {},\n            { renamed: [\"repos\", \"downloadZipballArchive\"] },\n        ],\n        downloadTarballArchive: [\"GET /repos/{owner}/{repo}/tarball/{ref}\"],\n        downloadZipballArchive: [\"GET /repos/{owner}/{repo}/zipball/{ref}\"],\n        enableAutomatedSecurityFixes: [\n            \"PUT /repos/{owner}/{repo}/automated-security-fixes\",\n        ],\n        enableLfsForRepo: [\"PUT /repos/{owner}/{repo}/lfs\"],\n        enableVulnerabilityAlerts: [\n            \"PUT /repos/{owner}/{repo}/vulnerability-alerts\",\n        ],\n        generateReleaseNotes: [\n            \"POST /repos/{owner}/{repo}/releases/generate-notes\",\n        ],\n        get: [\"GET /repos/{owner}/{repo}\"],\n        getAccessRestrictions: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\",\n        ],\n        getAdminBranchProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\",\n        ],\n        getAllEnvironments: [\"GET /repos/{owner}/{repo}/environments\"],\n        getAllStatusCheckContexts: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n        ],\n        getAllTopics: [\n            \"GET /repos/{owner}/{repo}/topics\",\n            { mediaType: { previews: [\"mercy\"] } },\n        ],\n        getAppsWithAccessToProtectedBranch: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n        ],\n        getAutolink: [\"GET /repos/{owner}/{repo}/autolinks/{autolink_id}\"],\n        getBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}\"],\n        getBranchProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection\",\n        ],\n        getClones: [\"GET /repos/{owner}/{repo}/traffic/clones\"],\n        getCodeFrequencyStats: [\"GET /repos/{owner}/{repo}/stats/code_frequency\"],\n        getCollaboratorPermissionLevel: [\n            \"GET /repos/{owner}/{repo}/collaborators/{username}/permission\",\n        ],\n        getCombinedStatusForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/status\"],\n        getCommit: [\"GET /repos/{owner}/{repo}/commits/{ref}\"],\n        getCommitActivityStats: [\"GET /repos/{owner}/{repo}/stats/commit_activity\"],\n        getCommitComment: [\"GET /repos/{owner}/{repo}/comments/{comment_id}\"],\n        getCommitSignatureProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\",\n        ],\n        getCommunityProfileMetrics: [\"GET /repos/{owner}/{repo}/community/profile\"],\n        getContent: [\"GET /repos/{owner}/{repo}/contents/{path}\"],\n        getContributorsStats: [\"GET /repos/{owner}/{repo}/stats/contributors\"],\n        getDeployKey: [\"GET /repos/{owner}/{repo}/keys/{key_id}\"],\n        getDeployment: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}\"],\n        getDeploymentStatus: [\n            \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}\",\n        ],\n        getEnvironment: [\n            \"GET /repos/{owner}/{repo}/environments/{environment_name}\",\n        ],\n        getLatestPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/latest\"],\n        getLatestRelease: [\"GET /repos/{owner}/{repo}/releases/latest\"],\n        getPages: [\"GET /repos/{owner}/{repo}/pages\"],\n        getPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/{build_id}\"],\n        getPagesHealthCheck: [\"GET /repos/{owner}/{repo}/pages/health\"],\n        getParticipationStats: [\"GET /repos/{owner}/{repo}/stats/participation\"],\n        getPullRequestReviewProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\",\n        ],\n        getPunchCardStats: [\"GET /repos/{owner}/{repo}/stats/punch_card\"],\n        getReadme: [\"GET /repos/{owner}/{repo}/readme\"],\n        getReadmeInDirectory: [\"GET /repos/{owner}/{repo}/readme/{dir}\"],\n        getRelease: [\"GET /repos/{owner}/{repo}/releases/{release_id}\"],\n        getReleaseAsset: [\"GET /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n        getReleaseByTag: [\"GET /repos/{owner}/{repo}/releases/tags/{tag}\"],\n        getStatusChecksProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n        ],\n        getTeamsWithAccessToProtectedBranch: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n        ],\n        getTopPaths: [\"GET /repos/{owner}/{repo}/traffic/popular/paths\"],\n        getTopReferrers: [\"GET /repos/{owner}/{repo}/traffic/popular/referrers\"],\n        getUsersWithAccessToProtectedBranch: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n        ],\n        getViews: [\"GET /repos/{owner}/{repo}/traffic/views\"],\n        getWebhook: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}\"],\n        getWebhookConfigForRepo: [\n            \"GET /repos/{owner}/{repo}/hooks/{hook_id}/config\",\n        ],\n        getWebhookDelivery: [\n            \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}\",\n        ],\n        listAutolinks: [\"GET /repos/{owner}/{repo}/autolinks\"],\n        listBranches: [\"GET /repos/{owner}/{repo}/branches\"],\n        listBranchesForHeadCommit: [\n            \"GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head\",\n        ],\n        listCollaborators: [\"GET /repos/{owner}/{repo}/collaborators\"],\n        listCommentsForCommit: [\n            \"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\",\n        ],\n        listCommitCommentsForRepo: [\"GET /repos/{owner}/{repo}/comments\"],\n        listCommitStatusesForRef: [\n            \"GET /repos/{owner}/{repo}/commits/{ref}/statuses\",\n        ],\n        listCommits: [\"GET /repos/{owner}/{repo}/commits\"],\n        listContributors: [\"GET /repos/{owner}/{repo}/contributors\"],\n        listDeployKeys: [\"GET /repos/{owner}/{repo}/keys\"],\n        listDeploymentStatuses: [\n            \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\",\n        ],\n        listDeployments: [\"GET /repos/{owner}/{repo}/deployments\"],\n        listForAuthenticatedUser: [\"GET /user/repos\"],\n        listForOrg: [\"GET /orgs/{org}/repos\"],\n        listForUser: [\"GET /users/{username}/repos\"],\n        listForks: [\"GET /repos/{owner}/{repo}/forks\"],\n        listInvitations: [\"GET /repos/{owner}/{repo}/invitations\"],\n        listInvitationsForAuthenticatedUser: [\"GET /user/repository_invitations\"],\n        listLanguages: [\"GET /repos/{owner}/{repo}/languages\"],\n        listPagesBuilds: [\"GET /repos/{owner}/{repo}/pages/builds\"],\n        listPublic: [\"GET /repositories\"],\n        listPullRequestsAssociatedWithCommit: [\n            \"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\",\n        ],\n        listReleaseAssets: [\n            \"GET /repos/{owner}/{repo}/releases/{release_id}/assets\",\n        ],\n        listReleases: [\"GET /repos/{owner}/{repo}/releases\"],\n        listTags: [\"GET /repos/{owner}/{repo}/tags\"],\n        listTeams: [\"GET /repos/{owner}/{repo}/teams\"],\n        listWebhookDeliveries: [\n            \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries\",\n        ],\n        listWebhooks: [\"GET /repos/{owner}/{repo}/hooks\"],\n        merge: [\"POST /repos/{owner}/{repo}/merges\"],\n        mergeUpstream: [\"POST /repos/{owner}/{repo}/merge-upstream\"],\n        pingWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/pings\"],\n        redeliverWebhookDelivery: [\n            \"POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts\",\n        ],\n        removeAppAccessRestrictions: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n            {},\n            { mapToData: \"apps\" },\n        ],\n        removeCollaborator: [\n            \"DELETE /repos/{owner}/{repo}/collaborators/{username}\",\n        ],\n        removeStatusCheckContexts: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n            {},\n            { mapToData: \"contexts\" },\n        ],\n        removeStatusCheckProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n        ],\n        removeTeamAccessRestrictions: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n            {},\n            { mapToData: \"teams\" },\n        ],\n        removeUserAccessRestrictions: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n            {},\n            { mapToData: \"users\" },\n        ],\n        renameBranch: [\"POST /repos/{owner}/{repo}/branches/{branch}/rename\"],\n        replaceAllTopics: [\n            \"PUT /repos/{owner}/{repo}/topics\",\n            { mediaType: { previews: [\"mercy\"] } },\n        ],\n        requestPagesBuild: [\"POST /repos/{owner}/{repo}/pages/builds\"],\n        setAdminBranchProtection: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\",\n        ],\n        setAppAccessRestrictions: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n            {},\n            { mapToData: \"apps\" },\n        ],\n        setStatusCheckContexts: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n            {},\n            { mapToData: \"contexts\" },\n        ],\n        setTeamAccessRestrictions: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n            {},\n            { mapToData: \"teams\" },\n        ],\n        setUserAccessRestrictions: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n            {},\n            { mapToData: \"users\" },\n        ],\n        testPushWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/tests\"],\n        transfer: [\"POST /repos/{owner}/{repo}/transfer\"],\n        update: [\"PATCH /repos/{owner}/{repo}\"],\n        updateBranchProtection: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection\",\n        ],\n        updateCommitComment: [\"PATCH /repos/{owner}/{repo}/comments/{comment_id}\"],\n        updateInformationAboutPagesSite: [\"PUT /repos/{owner}/{repo}/pages\"],\n        updateInvitation: [\n            \"PATCH /repos/{owner}/{repo}/invitations/{invitation_id}\",\n        ],\n        updatePullRequestReviewProtection: [\n            \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\",\n        ],\n        updateRelease: [\"PATCH /repos/{owner}/{repo}/releases/{release_id}\"],\n        updateReleaseAsset: [\n            \"PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}\",\n        ],\n        updateStatusCheckPotection: [\n            \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n            {},\n            { renamed: [\"repos\", \"updateStatusCheckProtection\"] },\n        ],\n        updateStatusCheckProtection: [\n            \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n        ],\n        updateWebhook: [\"PATCH /repos/{owner}/{repo}/hooks/{hook_id}\"],\n        updateWebhookConfigForRepo: [\n            \"PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config\",\n        ],\n        uploadReleaseAsset: [\n            \"POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}\",\n            { baseUrl: \"https://uploads.github.com\" },\n        ],\n    },\n    search: {\n        code: [\"GET /search/code\"],\n        commits: [\"GET /search/commits\"],\n        issuesAndPullRequests: [\"GET /search/issues\"],\n        labels: [\"GET /search/labels\"],\n        repos: [\"GET /search/repositories\"],\n        topics: [\"GET /search/topics\", { mediaType: { previews: [\"mercy\"] } }],\n        users: [\"GET /search/users\"],\n    },\n    secretScanning: {\n        getAlert: [\n            \"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\",\n        ],\n        listAlertsForOrg: [\"GET /orgs/{org}/secret-scanning/alerts\"],\n        listAlertsForRepo: [\"GET /repos/{owner}/{repo}/secret-scanning/alerts\"],\n        updateAlert: [\n            \"PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\",\n        ],\n    },\n    teams: {\n        addOrUpdateMembershipForUserInOrg: [\n            \"PUT /orgs/{org}/teams/{team_slug}/memberships/{username}\",\n        ],\n        addOrUpdateProjectPermissionsInOrg: [\n            \"PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}\",\n        ],\n        addOrUpdateRepoPermissionsInOrg: [\n            \"PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\",\n        ],\n        checkPermissionsForProjectInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/projects/{project_id}\",\n        ],\n        checkPermissionsForRepoInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\",\n        ],\n        create: [\"POST /orgs/{org}/teams\"],\n        createDiscussionCommentInOrg: [\n            \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\",\n        ],\n        createDiscussionInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions\"],\n        deleteDiscussionCommentInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\",\n        ],\n        deleteDiscussionInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\",\n        ],\n        deleteInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}\"],\n        getByName: [\"GET /orgs/{org}/teams/{team_slug}\"],\n        getDiscussionCommentInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\",\n        ],\n        getDiscussionInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\",\n        ],\n        getMembershipForUserInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/memberships/{username}\",\n        ],\n        list: [\"GET /orgs/{org}/teams\"],\n        listChildInOrg: [\"GET /orgs/{org}/teams/{team_slug}/teams\"],\n        listDiscussionCommentsInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\",\n        ],\n        listDiscussionsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions\"],\n        listForAuthenticatedUser: [\"GET /user/teams\"],\n        listMembersInOrg: [\"GET /orgs/{org}/teams/{team_slug}/members\"],\n        listPendingInvitationsInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/invitations\",\n        ],\n        listProjectsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/projects\"],\n        listReposInOrg: [\"GET /orgs/{org}/teams/{team_slug}/repos\"],\n        removeMembershipForUserInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}\",\n        ],\n        removeProjectInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}\",\n        ],\n        removeRepoInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\",\n        ],\n        updateDiscussionCommentInOrg: [\n            \"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\",\n        ],\n        updateDiscussionInOrg: [\n            \"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\",\n        ],\n        updateInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}\"],\n    },\n    users: {\n        addEmailForAuthenticated: [\n            \"POST /user/emails\",\n            {},\n            { renamed: [\"users\", \"addEmailForAuthenticatedUser\"] },\n        ],\n        addEmailForAuthenticatedUser: [\"POST /user/emails\"],\n        block: [\"PUT /user/blocks/{username}\"],\n        checkBlocked: [\"GET /user/blocks/{username}\"],\n        checkFollowingForUser: [\"GET /users/{username}/following/{target_user}\"],\n        checkPersonIsFollowedByAuthenticated: [\"GET /user/following/{username}\"],\n        createGpgKeyForAuthenticated: [\n            \"POST /user/gpg_keys\",\n            {},\n            { renamed: [\"users\", \"createGpgKeyForAuthenticatedUser\"] },\n        ],\n        createGpgKeyForAuthenticatedUser: [\"POST /user/gpg_keys\"],\n        createPublicSshKeyForAuthenticated: [\n            \"POST /user/keys\",\n            {},\n            { renamed: [\"users\", \"createPublicSshKeyForAuthenticatedUser\"] },\n        ],\n        createPublicSshKeyForAuthenticatedUser: [\"POST /user/keys\"],\n        deleteEmailForAuthenticated: [\n            \"DELETE /user/emails\",\n            {},\n            { renamed: [\"users\", \"deleteEmailForAuthenticatedUser\"] },\n        ],\n        deleteEmailForAuthenticatedUser: [\"DELETE /user/emails\"],\n        deleteGpgKeyForAuthenticated: [\n            \"DELETE /user/gpg_keys/{gpg_key_id}\",\n            {},\n            { renamed: [\"users\", \"deleteGpgKeyForAuthenticatedUser\"] },\n        ],\n        deleteGpgKeyForAuthenticatedUser: [\"DELETE /user/gpg_keys/{gpg_key_id}\"],\n        deletePublicSshKeyForAuthenticated: [\n            \"DELETE /user/keys/{key_id}\",\n            {},\n            { renamed: [\"users\", \"deletePublicSshKeyForAuthenticatedUser\"] },\n        ],\n        deletePublicSshKeyForAuthenticatedUser: [\"DELETE /user/keys/{key_id}\"],\n        follow: [\"PUT /user/following/{username}\"],\n        getAuthenticated: [\"GET /user\"],\n        getByUsername: [\"GET /users/{username}\"],\n        getContextForUser: [\"GET /users/{username}/hovercard\"],\n        getGpgKeyForAuthenticated: [\n            \"GET /user/gpg_keys/{gpg_key_id}\",\n            {},\n            { renamed: [\"users\", \"getGpgKeyForAuthenticatedUser\"] },\n        ],\n        getGpgKeyForAuthenticatedUser: [\"GET /user/gpg_keys/{gpg_key_id}\"],\n        getPublicSshKeyForAuthenticated: [\n            \"GET /user/keys/{key_id}\",\n            {},\n            { renamed: [\"users\", \"getPublicSshKeyForAuthenticatedUser\"] },\n        ],\n        getPublicSshKeyForAuthenticatedUser: [\"GET /user/keys/{key_id}\"],\n        list: [\"GET /users\"],\n        listBlockedByAuthenticated: [\n            \"GET /user/blocks\",\n            {},\n            { renamed: [\"users\", \"listBlockedByAuthenticatedUser\"] },\n        ],\n        listBlockedByAuthenticatedUser: [\"GET /user/blocks\"],\n        listEmailsForAuthenticated: [\n            \"GET /user/emails\",\n            {},\n            { renamed: [\"users\", \"listEmailsForAuthenticatedUser\"] },\n        ],\n        listEmailsForAuthenticatedUser: [\"GET /user/emails\"],\n        listFollowedByAuthenticated: [\n            \"GET /user/following\",\n            {},\n            { renamed: [\"users\", \"listFollowedByAuthenticatedUser\"] },\n        ],\n        listFollowedByAuthenticatedUser: [\"GET /user/following\"],\n        listFollowersForAuthenticatedUser: [\"GET /user/followers\"],\n        listFollowersForUser: [\"GET /users/{username}/followers\"],\n        listFollowingForUser: [\"GET /users/{username}/following\"],\n        listGpgKeysForAuthenticated: [\n            \"GET /user/gpg_keys\",\n            {},\n            { renamed: [\"users\", \"listGpgKeysForAuthenticatedUser\"] },\n        ],\n        listGpgKeysForAuthenticatedUser: [\"GET /user/gpg_keys\"],\n        listGpgKeysForUser: [\"GET /users/{username}/gpg_keys\"],\n        listPublicEmailsForAuthenticated: [\n            \"GET /user/public_emails\",\n            {},\n            { renamed: [\"users\", \"listPublicEmailsForAuthenticatedUser\"] },\n        ],\n        listPublicEmailsForAuthenticatedUser: [\"GET /user/public_emails\"],\n        listPublicKeysForUser: [\"GET /users/{username}/keys\"],\n        listPublicSshKeysForAuthenticated: [\n            \"GET /user/keys\",\n            {},\n            { renamed: [\"users\", \"listPublicSshKeysForAuthenticatedUser\"] },\n        ],\n        listPublicSshKeysForAuthenticatedUser: [\"GET /user/keys\"],\n        setPrimaryEmailVisibilityForAuthenticated: [\n            \"PATCH /user/email/visibility\",\n            {},\n            { renamed: [\"users\", \"setPrimaryEmailVisibilityForAuthenticatedUser\"] },\n        ],\n        setPrimaryEmailVisibilityForAuthenticatedUser: [\n            \"PATCH /user/email/visibility\",\n        ],\n        unblock: [\"DELETE /user/blocks/{username}\"],\n        unfollow: [\"DELETE /user/following/{username}\"],\n        updateAuthenticated: [\"PATCH /user\"],\n    },\n};\n\nconst VERSION = \"5.13.0\";\n\nfunction endpointsToMethods(octokit, endpointsMap) {\n    const newMethods = {};\n    for (const [scope, endpoints] of Object.entries(endpointsMap)) {\n        for (const [methodName, endpoint] of Object.entries(endpoints)) {\n            const [route, defaults, decorations] = endpoint;\n            const [method, url] = route.split(/ /);\n            const endpointDefaults = Object.assign({ method, url }, defaults);\n            if (!newMethods[scope]) {\n                newMethods[scope] = {};\n            }\n            const scopeMethods = newMethods[scope];\n            if (decorations) {\n                scopeMethods[methodName] = decorate(octokit, scope, methodName, endpointDefaults, decorations);\n                continue;\n            }\n            scopeMethods[methodName] = octokit.request.defaults(endpointDefaults);\n        }\n    }\n    return newMethods;\n}\nfunction decorate(octokit, scope, methodName, defaults, decorations) {\n    const requestWithDefaults = octokit.request.defaults(defaults);\n    /* istanbul ignore next */\n    function withDecorations(...args) {\n        // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n        let options = requestWithDefaults.endpoint.merge(...args);\n        // There are currently no other decorations than `.mapToData`\n        if (decorations.mapToData) {\n            options = Object.assign({}, options, {\n                data: options[decorations.mapToData],\n                [decorations.mapToData]: undefined,\n            });\n            return requestWithDefaults(options);\n        }\n        if (decorations.renamed) {\n            const [newScope, newMethodName] = decorations.renamed;\n            octokit.log.warn(`octokit.${scope}.${methodName}() has been renamed to octokit.${newScope}.${newMethodName}()`);\n        }\n        if (decorations.deprecated) {\n            octokit.log.warn(decorations.deprecated);\n        }\n        if (decorations.renamedParameters) {\n            // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n            const options = requestWithDefaults.endpoint.merge(...args);\n            for (const [name, alias] of Object.entries(decorations.renamedParameters)) {\n                if (name in options) {\n                    octokit.log.warn(`\"${name}\" parameter is deprecated for \"octokit.${scope}.${methodName}()\". Use \"${alias}\" instead`);\n                    if (!(alias in options)) {\n                        options[alias] = options[name];\n                    }\n                    delete options[name];\n                }\n            }\n            return requestWithDefaults(options);\n        }\n        // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n        return requestWithDefaults(...args);\n    }\n    return Object.assign(withDecorations, requestWithDefaults);\n}\n\nfunction restEndpointMethods(octokit) {\n    const api = endpointsToMethods(octokit, Endpoints);\n    return {\n        rest: api,\n    };\n}\nrestEndpointMethods.VERSION = VERSION;\nfunction legacyRestEndpointMethods(octokit) {\n    const api = endpointsToMethods(octokit, Endpoints);\n    return {\n        ...api,\n        rest: api,\n    };\n}\nlegacyRestEndpointMethods.VERSION = VERSION;\n\nexport { legacyRestEndpointMethods, restEndpointMethods };\n//# sourceMappingURL=index.js.map\n","import { Octokit as Octokit$1 } from '@octokit/core';\nimport { requestLog } from '@octokit/plugin-request-log';\nimport { paginateRest } from '@octokit/plugin-paginate-rest';\nimport { legacyRestEndpointMethods } from '@octokit/plugin-rest-endpoint-methods';\n\nconst VERSION = \"18.12.0\";\n\nconst Octokit = Octokit$1.plugin(requestLog, legacyRestEndpointMethods, paginateRest).defaults({\n    userAgent: `octokit-rest.js/${VERSION}`,\n});\n\nexport { Octokit };\n//# sourceMappingURL=index.js.map\n"],"sourceRoot":""}